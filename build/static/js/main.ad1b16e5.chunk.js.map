{"version":3,"sources":["pages/about/About.tsx","assets/js/service.ts","pages/graphs/Graphs.tsx","pages/thoughts/Thoughts.tsx","pages/home/components/HamButton.tsx","pages/home/components/Links.tsx","pages/home/style.ts","pages/home/Home.tsx","pages/site-record/SiteRecord.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","className","href","styled","div","ServerApi","api","axios","get","this","serverUrl","result","test","secondHandedAmount","Graphs","useState","records","setRecords","graphData","setGraphData","useEffect","fetchData","rawGetRequest","then","res","data","map","item","record","interval","setInterval","clearInterval","xValue","yValue","forEach","push","moment","parseInt","Object","keys","format","values","axisGenerator","option","base","Date","date","Math","random","i","now","getFullYear","getMonth","getDate","join","round","tooltip","trigger","position","pt","title","left","text","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","type","boundaryGap","yAxis","scale","start","end","handleIcon","handleSize","handleStyle","color","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","name","smooth","symbol","sampling","itemStyle","areaStyle","thoughtsList","postInfos","imageUrl","Thoughts","WorkWrapper","index","key","src","alt","style","padding","HamButton","HamWrapper","onClick","aria-label","to","Links","LinksWrapper","HomeWrapper","Home","path","exact","component","SiteRecord","SiteInfo","role","Anchor","a","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad1b16e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      I am\r\n      <a href=\"https://cutyourteeth.github.io/dist\">here</a>\r\n      <div className=\"contact-list\">\r\n        <div className=\"contact-tel\"></div>\r\n        <div className=\"contact-mail\"></div>\r\n        <div className=\"contact-address\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AboutWrapper = styled.div`\r\n  font-size: 1.5rem;\r\n  color: rgb(78, 78, 78, 0.6);\r\n  padding: 2rem;\r\n\r\n  &:hover {\r\n    color: rgb(178, 178, 178, 0.6);\r\n\r\n    & > a {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import axios, { AxiosResponse } from 'axios'\r\n\r\nexport interface RecordDto {\r\n    [propsName: string]: { secondHandedAmount: string }\r\n}\r\n\r\nexport interface EstateDataDto {\r\n    id: number\r\n    record: RecordDto\r\n    createAt?: string\r\n    updateAt?: string\r\n    deleteAt?: string\r\n}\r\n\r\n/**\r\n * 用于调用服务端接口\r\n * @export\r\n */\r\nexport default class ServerApi {\r\n    public static serverUrl = 'http://caperal.cn:3141'\r\n\r\n    public static async rawGetRequest<T = AxiosResponse<EstateDataDto[] | any>>(api: string) {\r\n        const result = await axios.get<T>(`${this.serverUrl}/${api}`)\r\n        return result\r\n    }\r\n}\r\n","import ReactEcharts from 'echarts-for-react'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ServerApi, { EstateDataDto, RecordDto } from '../../assets/js/service'\r\n\r\nconst test: RecordDto[] = [{ '1579242785372': { secondHandedAmount: ' 59948 ' } }, { '1579246382840': { secondHandedAmount: ' 59952 ' } }]\r\n\r\nexport const Graphs = () => {\r\n    const [records, setRecords] = useState<RecordDto[]>(test)\r\n    const [graphData, setGraphData] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchData = () =>\r\n            ServerApi.rawGetRequest<EstateDataDto[]>('list/hz').then(res => {\r\n                const records = res.data.map(item => item.record)\r\n                setRecords(records)\r\n            })\r\n        fetchData()\r\n        const interval = setInterval(fetchData, 1000 * 60 * 60)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    /*\r\n     * WARN:\r\n     * THIS WEIRD DATA STRUCTURE IS PRACTICE ONLY\r\n     * IT IS PART OF TS TRAINING\r\n     */\r\n    useEffect(() => {\r\n        let xValue: string[] = [],\r\n            yValue: number[] = []\r\n        records.forEach(item => {\r\n            xValue.push(moment(parseInt(Object.keys(item)[0], 10)).format(\"HH' DD/MMM/YYYY\"))\r\n            yValue.push(parseInt(Object.values(item)[0].secondHandedAmount, 10))\r\n        })\r\n        setGraphData(axisGenerator(xValue, yValue))\r\n    }, [records])\r\n\r\n    return <>{graphData && <ReactEcharts option={graphData} />}</>\r\n}\r\n\r\nconst axisGenerator = (xValue: string[], yValue: number[]) => {\r\n    var base = +new Date(xValue[0])\r\n    var oneDay = 24 * 3600 * 1000\r\n    var date = []\r\n\r\n    var data = [Math.random() * 300]\r\n\r\n    for (var i = 1; i < 20000; i++) {\r\n        var now = new Date((base += oneDay))\r\n        date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'))\r\n        data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]))\r\n    }\r\n\r\n    return {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            position: function(pt: any) {\r\n                return [pt[0], '10%']\r\n            }\r\n        },\r\n        title: {\r\n            left: 'center',\r\n            text: 'HZ real-estate data graph'\r\n        },\r\n        toolbox: {\r\n            feature: {\r\n                dataZoom: {\r\n                    yAxisIndex: 'none'\r\n                },\r\n                restore: {},\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: xValue\r\n        },\r\n        yAxis: {\r\n            scale: true,\r\n            type: 'value',\r\n            boundaryGap: [0, '100%']\r\n        },\r\n        dataZoom: [\r\n            {\r\n                type: 'inside',\r\n                start: 0,\r\n                end: 10\r\n            },\r\n            {\r\n                start: 0,\r\n                end: 10,\r\n                handleIcon:\r\n                    'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\r\n                handleSize: '80%',\r\n                handleStyle: {\r\n                    color: '#fff',\r\n                    shadowBlur: 3,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\r\n                    shadowOffsetX: 2,\r\n                    shadowOffsetY: 2\r\n                }\r\n            }\r\n        ],\r\n        series: [\r\n            {\r\n                name: 'Total amount',\r\n                type: 'line',\r\n                smooth: true,\r\n                symbol: 'none',\r\n                sampling: 'average',\r\n                itemStyle: {\r\n                    color: 'rgb(255, 70, 131)'\r\n                },\r\n                areaStyle: {\r\n                    // color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                    //     {\r\n                    //         offset: 0,\r\n                    //         color: 'rgb(255, 158, 68)'\r\n                    //     },\r\n                    //     {\r\n                    //         offset: 1,\r\n                    //         color: 'rgb(255, 70, 131)'\r\n                    //     }\r\n                    // ])\r\n                },\r\n                data: yValue\r\n            }\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst thoughtsList = [\r\n  { text: \"keep myself as an independent one\" },\r\n  { text: \"coding is an implement of art \" },\r\n  { text: \"Good habits serve everyone\" }\r\n];\r\nconst postInfos = [\r\n  {\r\n    title: \"coon\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2017/01/15/19/04/red-panda-1982445__340.jpg\",\r\n    text: \"the coon:\\n\\nOne of the coons just ran out of your mind\"\r\n  },\r\n  {\r\n    title: \"the woods\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2018/08/21/23/29/fog-3622519__340.jpg\",\r\n    text: \"the woods:\\n\\nQuite miss about it's peaceful sound\"\r\n  },\r\n  {\r\n    title: \"the fall\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg\",\r\n    text: \"the fall:\\n\\nEverything falls in the end, right?\"\r\n  }\r\n];\r\n\r\nexport const Thoughts = () => {\r\n  return (\r\n    <WorkWrapper>\r\n    {postInfos.map((item, index) => (\r\n      <div className=\"work-list-item\" key={index}>\r\n        <img\r\n          src={item.imageUrl}\r\n          className=\"work-list-image\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"work-list-text\">{item.text}</div>\r\n      </div>\r\n    ))}\r\n        <div>\r\n      <div>representing saytote - chat to note</div>\r\n      {thoughtsList.map((item, index) => (\r\n        <div style={{padding: \"1rem 2rem\"}} key={index}>\r\n          {index + 1}. {item.text}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </WorkWrapper>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport const WorkWrapper = styled.div`\r\n  .work-list-item {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .work-list-image,\r\n  .work-list-text {\r\n    padding: 4rem 0 0 2rem;\r\n    box-sizing: border-box;\r\n    width: 32rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  .work-list-text {\r\n    top: 0;\r\n    margin: 4rem 0 0 2rem;\r\n    opacity: 0;\r\n    height: 100%;\r\n    position: absolute;\r\n    white-space: pre-wrap;\r\n  }\r\n\r\n  .work-list-text:hover,\r\n  .work-list-image:hover ~ .work-list-text {\r\n    opacity: 1;\r\n    background-color: rgba(17, 17, 17, 0.6);\r\n  }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HamButton = () => {\r\n  const showMenu = () => {};\r\n\r\n  return (\r\n    <HamWrapper>\r\n      <i className=\"header-ham-button\" onClick={showMenu} aria-label=\"menu\"></i>\r\n      <div className=\"header-links\">\r\n        <Link to=\"/work\" className=\"header-link\">\r\n          WORK\r\n        </Link>\r\n        <Link to=\"/thoughts\" className=\"header-link\">\r\n          THOUGHTS\r\n        </Link>\r\n        <Link to=\"/about\" className=\"header-link\">\r\n          ABOUT\r\n        </Link>\r\n      </div>\r\n    </HamWrapper>\r\n  );\r\n};\r\n\r\nconst HamWrapper = styled.div`\r\n.header-links > * {\r\n        margin-left: 1rem;\r\n        letter-spacing: 0.1rem;\r\n      }\r\n\r\n      .header-links > *:hover {\r\n        color: white;\r\n      }\r\n\r\n      .header-ham-button {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 0;\r\n        transform: translateY(-50%);\r\n        display: block;\r\n        width: 1.5625rem;\r\n        height: 1.5625rem;\r\n        border: 0.08rem solid rgb(102, 102, 102);\r\n        border-radius: 0.175rem;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n\r\n        &:after {\r\n          content: \"\";\r\n          position: absolute;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 60%;\r\n          height: 100%;\r\n          background: repeating-linear-gradient(\r\n            transparent 0,\r\n            transparent 20%,\r\n            rgb(142, 142, 142) 22%,\r\n            rgb(142, 142, 142) 28%,\r\n            transparent 30%,\r\n            transparent 45%,\r\n            rgb(142, 142, 142) 47%,\r\n            rgb(142, 142, 142) 53%,\r\n            transparent 55%,\r\n            transparent 70%,\r\n            rgb(142, 142, 142) 72%,\r\n            rgb(142, 142, 142) 78%,\r\n            transparent 80%,\r\n            transparent 100%\r\n          );\r\n        }\r\n      }\r\n\r\n      @media screen and (max-width: 768px) {\r\n        .header-links {\r\n          display: flex;\r\n          position: absolute;\r\n          top: calc(2rem + 1.5625rem / 2);\r\n          right: 0%;\r\n          line-height: 3.15;\r\n          text-align: right;\r\n          flex-flow: column;\r\n          justify-content: flex-start;\r\n        }\r\n\r\n        .header-links {\r\n          opacity: 0;\r\n          visibility: hidden;\r\n        }\r\n\r\n        .header-ham-button {\r\n          opacity: 1;\r\n          visibility: visible;\r\n        }\r\n\r\n        .header-ham-button:hover ~ .header-links,\r\n        .header-links:hover {\r\n          opacity: 1;\r\n          visibility: visible;\r\n          border-top: none;\r\n          border-right: none;\r\n          border-radius: 2px;\r\n        }\r\n      }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Links = () => {\r\n  return (\r\n    <LinksWrapper>\r\n      <Link to=\"/graphs\" className=\"link\">\r\n        Graphs\r\n      </Link>\r\n      <Link to=\"/thoughts\" className=\"link\">\r\n        Thoughts\r\n      </Link>\r\n      <Link to=\"/about\" className=\"link\">\r\n        About\r\n      </Link>\r\n    </LinksWrapper>\r\n  );\r\n};\r\n\r\nconst LinksWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 2rem;\r\n  .link {\r\n    padding: 0.5rem 0;\r\n    font-size: 45px;\r\n    color: gray;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    &:hover {\r\n      color: #2dc6ad;\r\n      filter: hue-rotate();\r\n      animation: hue-trans 7s infinite;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeWrapper = styled.div`\r\n  position: relative;\r\n  color: white;\r\n  min-height: 120vh;\r\n\r\n  .title {\r\n    padding: 6rem 2rem 4rem;\r\n\r\n    & > h1 {\r\n      font-size: 50px;\r\n      font-weight: 600;\r\n      line-height: 1.25;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.1rem;\r\n    }\r\n\r\n    & > p {\r\n      padding-top: 0.5rem;\r\n      font-size: 15px;\r\n      line-height: 15px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  .main-view {\r\n    min-height: calc(100vh - 400px);\r\n  }\r\n  .header {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    height: 4rem;\r\n    line-height: 4rem;\r\n    padding: 0 2rem;\r\n    text-transform: uppercase;\r\n    box-sizing: border-box;\r\n    color: rgb(102, 102, 102);\r\n\r\n    .header-left {\r\n      letter-spacing: 0.2rem;\r\n\r\n      &:hover {\r\n        color: white;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      display: flex;\r\n      flex-flow: row;\r\n      position: relative;\r\n      justify-content: center;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { About } from \"../about/About\";\r\nimport { Graphs } from \"../graphs/Graphs\";\r\nimport { Thoughts } from \"../thoughts/Thoughts\";\r\nimport { HamButton } from \"./components/HamButton\";\r\nimport { Links } from \"./components/Links\";\r\n// import \"./style.scss\";\r\nimport { HomeWrapper } from \"./style\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    // <div className=\"wrapper\">\r\n    <HomeWrapper>\r\n      <HashRouter>\r\n        <div className=\"header\">\r\n          <div className=\"header-left\">CAPERAL</div>\r\n          <div className=\"header-right\">\r\n            <HamButton />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"title\">\r\n          <h1>Be a man,</h1>\r\n          <h1>Half blind</h1>\r\n          <p>Mind your own, leave out all the rest</p>\r\n        </div>\r\n\r\n        <Links/>\r\n        \r\n        <div className=\"main-view\">\r\n          <Switch>\r\n            <Route path=\"/graphs\" exact={true} component={Graphs} />\r\n            <Route path=\"/thoughts\" exact={true} component={Thoughts} />\r\n            <Route path=\"/about\" exact={true} component={About} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </HomeWrapper>\r\n    // </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const SiteRecord = () => {\r\n    return (\r\n        <SiteInfo>\r\n            <p>\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ✨\r\n                </span>\r\n                This site is under developing, see you soon&nbsp;\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ✨\r\n                </span>\r\n            </p>\r\n            <br/>\r\n            <p>\r\n                Written by Caper with passion and&nbsp;\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ❤️\r\n                </span>\r\n            </p>\r\n            <Anchor href=\"http://www.beian.miit.gov.cn/\" aria-label=\"link and check for this site\">\r\n                IPC证: 浙ICP备19047176号\r\n            </Anchor>\r\n        </SiteInfo>\r\n    )\r\n}\r\n\r\nconst SiteInfo = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    padding: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    font-size: 14px;\r\n    color: white;\r\n    & > p:hover {\r\n        color: goldenrod;\r\n    }\r\n`\r\n\r\nconst Anchor = styled.a`\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    font-size: 12px;\r\n    &:hover {\r\n        color: goldenrod;\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport \"./assets/css/animations.css\";\r\nimport \"./assets/css/reset.css\";\r\nimport { Home } from \"./pages/home/Home\";\r\nimport { SiteRecord } from \"./pages/site-record/SiteRecord\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Home />\r\n      <SiteRecord />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}