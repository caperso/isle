{"version":3,"sources":["assets/js/service.ts","components/core/Heartbeat.tsx","pages/gallery/Gallery.tsx","pages/home/components/HamButton.tsx","pages/about/About.tsx","pages/graphs/components/Chart.tsx","pages/graphs/EstateGraph.tsx","pages/graphs/PriceGraph.tsx","pages/graphs/Graphs.tsx","pages/home/components/Divide.tsx","pages/home/components/Links.tsx","pages/home/style.ts","pages/home/Home.tsx","pages/site-record/SiteRecord.tsx","pages/solar/Solar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ServerApi","api","name","destination","axios","get","this","serverUrl","result","payload","post","Heartbeat","useEffect","route","window","location","href","message","hello","bye","sendHeartbeat","onbeforeunload","postInfos","title","imageUrl","text","alt","Gallery","useState","visible","setVisible","url","setUrl","GalleryWrapper","map","item","index","className","key","data-hover","onClick","handleClick","src","onClose","operatorBar","styled","div","HamButton","HamWrapper","aria-label","to","About","AboutWrapper","EChart","React","lazy","Chart","props","children","extractMethod","records","setRecords","chartData","setChartData","fetchData","getListData","then","res","data","record","interval","setInterval","clearInterval","length","chartDataGenerator","Suspense","fallback","extractValue","axisDataList","Object","keys","xValue","yValue","forEach","value","timestamp","push","format","parseInt","match","extractValueDefault","EstateGraph","PriceGraph","Graphs","path","Divide","primaryLinks","staticUrl","description","secondaryLinks","deep","Links","history","useHistory","LinksWrapper","singleActiveStyle","color","animation","defaultExpanded","onChangeRoute","longRoute","concat","replace","console","log","HomeWrapper","Home","data-spotlight","role","component","SiteRecord","SiteInfo","Anchor","a","Solar","App","AppWrapper","from","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+TAyBqBA,E,kJAIsDC,EAAaC,G,gFAC5EC,EAAcD,EAAI,UAAMD,EAAN,YAAaC,GAAb,UAAyBD,G,SAC1BG,IAAMC,IAAN,UAAgBC,KAAKC,UAArB,YAAkCJ,I,cAAjDK,E,yBACCA,G,sLAGiDP,EAAaQ,G,uFAChDL,IAAMM,KAAN,UAAiBJ,KAAKC,UAAtB,YAAmCN,GAAOQ,G,cAAzDD,E,yBACCA,G,yqBAZMR,EACHO,UAAY,0BCvBvB,IAAMI,EAAY,WAerB,OAdAC,qBAAU,WACN,IAAMH,EAAU,CAAEI,MAAOC,OAAOC,SAASC,KAAMC,QAAS,IAClDC,EAAK,KAAQT,EAAR,CAAiBQ,QAAS,YAC/BE,EAAG,KAAQV,EAAR,CAAiBQ,QAAS,aAE/BjB,EAAUoB,cAAc,wBAAyBF,GAMrDJ,OAAOO,eAJP,WACIrB,EAAUoB,cAAc,wBAAyBD,MAItD,IAEI,sC,i3BCbX,IAAMG,EAAY,CACd,CACIC,MAAO,OACPC,SAAU,4EACVC,KAAM,yDACNC,IAAK,YAET,CACIH,MAAO,YACPC,SAAU,sEACVC,KAAM,0DACNC,IAAK,aAET,CACIH,MAAO,WACPC,SAAU,uEACVC,KAAM,yDACNC,IAAK,aAIAC,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAEHF,mBAAS,IAFN,mBAElBG,EAFkB,KAEbC,EAFa,KAWzB,OACI,kBAACC,EAAD,KACKX,EAAUY,KAAI,SAACC,EAAMC,GAAP,OACX,yBAAKC,UAAU,oBAAoBC,IAAKF,EAAOG,aAAYJ,EAAKV,KAAMe,QAAS,kBARvE,SAACT,GACjBC,EAAOD,GACPD,GAAW,GAMkFW,CAAYN,EAAKX,YAClG,yBAAKE,IAAKS,EAAKT,IAAKgB,IAAKP,EAAKX,SAAUa,UAAU,2BAG1D,kBAAC,IAAD,CAAcN,IAAKA,EAAKY,QAfhB,WACZb,GAAW,IAcmCD,QAASA,EAASe,YAAa,CAAC,YAAa,cAAe,aAKrGX,EAAiBY,IAAOC,IAAV,K,gnEC7CpB,IAAMC,EAAY,WAGvB,OACE,kBAACC,EAAD,KACE,uBAAGX,UAAU,oBAAoBG,QAJpB,aAIuCS,aAAW,SAC/D,yBAAKZ,UAAU,gBACb,kBAAC,IAAD,CAAMa,GAAG,WAAWb,UAAU,eAA9B,oBAGA,kBAAC,IAAD,CAAMa,GAAG,QAAQb,UAAU,eAA3B,WAQFW,EAAaH,IAAOC,IAAV,K,knBCnBT,IAAMK,EAAQ,WACjB,OACI,kBAACC,EAAD,KACI,yBAAKf,UAAU,WAAf,+BAEA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,iBAAf,2BACA,6BAEA,uBAAGrB,KAAK,6BAA6BqB,UAAU,mBAC3C,0BAAMA,UAAU,yBADpB,+BAGA,uBAAGrB,KAAK,wBAAwBqB,UAAU,iBACtC,0BAAMA,UAAU,uBADpB,qBAGA,uBAAGrB,KAAK,mCAAmCqB,UAAU,gBACjD,0BAAMA,UAAU,uBADpB,iBAQHe,EAAeP,IAAOC,IAAV,K,QCtBnBO,EAASC,IAAMC,MAAK,WACtB,OAAO,uDASEC,EAAQ,SAACC,GAAkB,IAC5BxD,EAAiCwD,EAAjCxD,IAAKyD,EAA4BD,EAA5BC,SAAUC,EAAkBF,EAAlBE,cADY,EAEL/B,mBAAuB,IAFlB,mBAE5BgC,EAF4B,KAEnBC,EAFmB,OAGDjC,mBAAqB,IAHpB,mBAG5BkC,EAH4B,KAGjBC,EAHiB,KA6BnC,OAxBAnD,qBAAU,WACN,IAAMoD,EAAY,kBACdhE,EAAUiE,YAA6BhE,GAAKiE,MAAK,SAAAC,GAC7C,IAAMP,EAAUO,EAAIC,KAAKlC,KAAI,SAAAC,GAAI,OAAIA,EAAKkC,UAC1CR,EAAWD,OAEnBI,IACA,IAAMM,EAAWC,YAAYP,EAAW,MACxC,OAAO,kBAAMQ,cAAcF,MAC5B,CAACrE,IAKJW,qBAAU,WACN,GAAKgD,EAAQa,OAAb,CAGA,IAAML,EAAOM,EAAmBd,EAASD,GACrCS,GACAL,EAAaK,MAElB,CAACR,EAASD,IAGT,kBAAC,IAAMgB,SAAP,CAAgBC,SAAU,4CACrBlB,EACAI,EAAU5B,KAAI,SAACC,EAAMC,GAAP,OACX,kBAACiB,EAAD,CAAQe,KAAMjC,EAAMG,IAAKF,SAanCsC,EAAqB,SAACd,EAAuBiB,GAC/C,IAAIC,EAA2BC,OAAOC,KAAKpB,EAAQ,IAAI1B,KAAI,SAAAC,GAAI,MAAK,CAChEjC,KAAMiC,EACN8C,OAAQ,GACRC,OAAQ,OAmBZ,OAVAJ,EAAaK,SAAQ,SAAAf,GACjBR,EAAQuB,SAAQ,SAAAhD,GACZ,GAAK4C,OAAOC,KAAK7C,GAAMsC,OAAvB,CADoB,MAIStC,EAAKiC,EAAKlE,MAA/BkF,EAJY,EAIZA,MAAOC,EAJK,EAILA,UACfjB,EAAKa,OAAOK,KAAKC,YAAOC,SAASH,EAAW,IAAK,kBACjDjB,EAAKc,OAAOI,KAAKT,EAAeA,EAAaO,GAXzB,SAACA,GACzB,OAAOI,SAASJ,EAAMK,MAAM,UAAW,GAAI,IAUeC,CAAoBN,WAG3EN,GChFEa,EAAc,WACvB,OAAO,kBAAC,EAAD,CAAO1F,IAAI,iBCDT2F,EAAa,WAItB,OAAO,kBAAC,EAAD,CAAO3F,IAAI,uBAAuB0D,cAHpB,SAACyB,GAClB,OAAOI,SAASJ,EAAMK,MAAM,UAAW,GAAG,QCArCI,EAAS,WAClB,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,uBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,sBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,0BAAZ,8C,wICbT,IAAMC,EAASlD,IAAOC,IAAV,K,6nBCMnB,IAAMkD,EAAwB,CAC1B,CACI9F,KAAM,WACNW,MAAO,QACPoF,UAAW,2BACXC,YAAa,oBAEjB,CAAEhG,KAAM,eAAgBW,MAAO,MAAOqF,YAAa,yDAGjDC,EAA0B,CAC5B,CACIjG,KAAM,SACNW,MAAO,SACPqF,YAAa,yBACbE,KAAM,CACF,CAAElG,KAAM,cAAeW,MAAO,SAAUqF,YAAa,eACrD,CAAEhG,KAAM,QAASW,MAAO,QAASqF,YAAa,gBAGtD,CAAED,UAAW,sCAAuC/F,KAAM,QAASgG,YAAa,kBAChF,CAAErF,MAAO,QAASX,KAAM,QAASgG,YAAa,qBAGrCG,EAAQ,WACjB,IAAMC,EAAUC,cAahB,OACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAQpC,KAAM4B,IACd,kBAACD,EAAD,MACA,kBAAC,IAAD,CAAQ3B,KAAM+B,EAAgBM,kBATG,CACrCC,MAAO,QACPC,UAAW,QAOuDC,iBAAiB,EAAOC,cAfpE,SAAChG,GACvB,IAAMiG,EAAY,SAASC,OAAOlG,GAClCyF,EAAQU,QAAQF,GAChBG,QAAQC,IAAIJ,QAiBdN,EAAe3D,IAAOC,IAAV,K,+3CCrDX,IAAMqE,EAActE,IAAOC,IAAV,KCKXsE,EAAO,WAChB,OACI,kBAACD,EAAD,KACI,yBAAK9E,UAAU,SACX,wBAAIA,UAAU,aAAagF,iBAAe,WAA1C,WAGA,6BACA,sDACA,wEACA,4DAEI,0BAAMC,KAAK,MAAMrE,aAAW,QAA5B,wCAMR,kBAAC,EAAD,MAEA,yBAAKZ,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyD,KAAK,eAAeyB,UAAW1B,IACtC,kBAAC,IAAD,CAAOC,KAAK,cAAcyB,UAAWpE,Q,o4BC3BlD,IAAMqE,GAAa,WACtB,OACI,kBAACC,GAAD,KACI,yBAAKpF,UAAU,aACX,kBAACqF,GAAD,CAAQ1G,KAAK,gCAAgCiC,aAAW,gCACpD,0BAAMqE,KAAK,MAAMrE,aAAW,SAA5B,6CAIJ,6BACI,0BAAMqE,KAAK,MAAMrE,aAAW,SAA5B,mCAEI,6BAFJ,mCAII,6BAJJ,8CAadwE,GAAW5E,IAAOC,IAAV,KAgCR4E,GAAS7E,IAAO8E,EAAV,KCvDCC,GAAQ,WACjB,OACI,yBAAKvF,UAAU,cACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,qB,6qBCJ3B,IAuBewF,GAvBO,WAClB,OACI,kBAACC,GAAD,KACI,kBAAC,IAAD,KACI,yBAAKzF,UAAU,UACX,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,gBACX,kBAAC,EAAD,QAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU0F,KAAK,IAAIC,OAAO,EAAM9E,GAAG,UACnC,kBAAC,IAAD,CAAO4C,KAAK,QAAQyB,UAAWH,IAC/B,kBAAC,IAAD,CAAOtB,KAAK,WAAWyB,UAAW5F,KAEtC,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,SAQVmG,GAAajF,IAAOC,IAAV,M,MCzBImF,QACW,cAA7BnH,OAAOC,SAASmH,UAEe,UAA7BpH,OAAOC,SAASmH,UAEhBpH,OAAOC,SAASmH,SAASzC,MACvB,2DCZN0C,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,MAAK,SAAAwE,GACjCA,EAAaC,kB","file":"static/js/main.64931f14.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nexport interface RecordData {\n    [propName: string]: { timestamp: string; value: string };\n}\n\ninterface BaseDataQueryDto {\n    id: number;\n    record: RecordData;\n    createAt?: string;\n    updateAt?: string;\n    deleteAt?: string;\n}\nexport interface EstateDataDto extends BaseDataQueryDto {}\nexport interface PriceDataDto extends BaseDataQueryDto {}\n\nexport interface HeartbeatDto {\n    message: string;\n    route: string;\n}\n\n/**\n * 用于调用服务端接口\n * @export\n */\nexport default class ServerApi {\n    public static serverUrl = 'https://caperal.cn:3141';\n    // public static serverUrl = 'http://localhost:3141';\n\n    public static async getListData<T = AxiosResponse<BaseDataQueryDto[]>>(api: string, name?: string) {\n        let destination = name ? `${api}/${name}` : `${api}`;\n        const result = await axios.get<T>(`${this.serverUrl}/${destination}`);\n        return result;\n    }\n\n    public static async sendHeartbeat<T = AxiosResponse<any[]>>(api: string, payload: any) {\n        const result = await axios.post<T>(`${this.serverUrl}/${api}`, payload);\n        return result;\n    }\n}\n","import React, { useEffect } from 'react';\nimport ServerApi from '../../assets/js/service';\n\nexport const Heartbeat = () => {\n    useEffect(() => {\n        const payload = { route: window.location.href, message: '' };\n        const hello = { ...payload, message: 'step in' };\n        const bye = { ...payload, message: 'step out' };\n        function sayHello() {\n            ServerApi.sendHeartbeat('server/heartbeat/beep', hello);\n        }\n        function sayBye() {\n            ServerApi.sendHeartbeat('server/heartbeat/beep', bye);\n        }\n        sayHello();\n        window.onbeforeunload = sayBye;\n    }, []);\n\n    return <></>;\n};\n","import { ImagePreview } from 'gearware';\nimport 'gearware/lib/components/image-preview/index.css';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst postInfos = [\n    {\n        title: 'coon',\n        imageUrl: 'https://cdn.pixabay.com/photo/2017/01/15/19/04/red-panda-1982445__340.jpg',\n        text: 'the coon:\\n\\n Click to view (点击查看)',\n        alt: 'the coon',\n    },\n    {\n        title: 'the woods',\n        imageUrl: 'https://cdn.pixabay.com/photo/2018/08/21/23/29/fog-3622519__340.jpg',\n        text: 'the woods:\\n\\n Click to view (点击查看)',\n        alt: 'the woods',\n    },\n    {\n        title: 'the fall',\n        imageUrl: 'https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg',\n        text: 'the fall:\\n\\n Click to view (点击查看)',\n        alt: 'the fall',\n    },\n];\n\nexport const Gallery = () => {\n    const [visible, setVisible] = useState(false);\n    const [url, setUrl] = useState('');\n    const onClose = () => {\n        setVisible(false);\n    };\n    const handleClick = (url: string) => {\n        setUrl(url);\n        setVisible(true);\n    };\n\n    return (\n        <GalleryWrapper>\n            {postInfos.map((item, index) => (\n                <div className=\"gallery-list-item\" key={index} data-hover={item.text} onClick={() => handleClick(item.imageUrl)}>\n                    <img alt={item.alt} src={item.imageUrl} className=\"gallery-list-image\" />\n                </div>\n            ))}\n            <ImagePreview url={url} onClose={onClose} visible={visible} operatorBar={['free-drag', 'free-rotate', 'reset']} />\n        </GalleryWrapper>\n    );\n};\n\nexport const GalleryWrapper = styled.div`\n    padding: 4rem 0 0 2rem;\n    position: relative;\n    z-index: 1;\n\n    .gallery-list-item {\n        margin: 2rem 0;\n        box-sizing: border-box;\n        position: relative;\n        overflow:hidden;\n\n        &:hover::after {\n            content: attr(data-hover);\n            color: white;\n            position: absolute;\n            box-sizing: border-box;\n            padding: 6rem 0 0 2rem;\n            cursor: pointer;\n            background-color: #17171730;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            opacity: 0;\n            animation: fade-in 0.45s forwards;\n        }\n    }\n    .gallery-list-image {\n        width: 32rem;\n        cursor: pointer;\n        box-sizing: border-box;\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HamButton = () => {\n  const showMenu = () => {};\n\n  return (\n    <HamWrapper>\n      <i className=\"header-ham-button\" onClick={showMenu} aria-label=\"menu\"></i>\n      <div className=\"header-links\">\n        <Link to=\"/gallery\" className=\"header-link\">\n          MINNIE's GALLERY\n        </Link>\n        <Link to=\"/home\" className=\"header-link\">\n          HOME\n        </Link>\n      </div>\n    </HamWrapper>\n  );\n};\n\nconst HamWrapper = styled.div`\n.header-links > * {\n        margin-left: 1rem;\n        letter-spacing: 0.07rem;\n      }\n\n      .header-links > *:hover {\n        color: white;\n      }\n\n      .header-ham-button {\n        opacity: 0;\n        visibility: hidden;\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translateY(-50%);\n        display: block;\n        width: 1.5625rem;\n        height: 1.5625rem;\n        border: 0.08rem solid rgb(102, 102, 102);\n        border-radius: 0.175rem;\n        background-color: transparent;\n        cursor: pointer;\n\n        &:after {\n          content: \"\";\n          position: absolute;\n          left: 50%;\n          transform: translateX(-50%);\n          width: 60%;\n          height: 100%;\n          background: repeating-linear-gradient(\n            transparent 0,\n            transparent 20%,\n            rgb(142, 142, 142) 22%,\n            rgb(142, 142, 142) 28%,\n            transparent 30%,\n            transparent 45%,\n            rgb(142, 142, 142) 47%,\n            rgb(142, 142, 142) 53%,\n            transparent 55%,\n            transparent 70%,\n            rgb(142, 142, 142) 72%,\n            rgb(142, 142, 142) 78%,\n            transparent 80%,\n            transparent 100%\n          );\n        }\n      }\n\n      @media screen and (max-width: 768px) {\n        .header-links {\n          display: flex;\n          position: absolute;\n          top: calc(2rem + 1.5625rem / 2);\n          right: 0%;\n          line-height: 3.15;\n          text-align: right;\n          flex-flow: column;\n          justify-content: flex-start;\n        }\n\n        .header-links {\n          opacity: 0;\n          visibility: hidden;\n        }\n\n        .header-ham-button {\n          opacity: 1;\n          visibility: visible;\n        }\n\n        .header-ham-button:hover ~ .header-links,\n        .header-links:hover {\n          opacity: 1;\n          visibility: visible;\n          border-top: none;\n          border-right: none;\n          border-radius: 2px;\n        }\n      }\n    }\n`\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const About = () => {\n    return (\n        <AboutWrapper>\n            <div className=\"content\">-- Details not available --</div>\n\n            <div className=\"contact-list\">\n                <div className=\"contact-title\">You may contact me with</div>\n                <br />\n\n                <a href=\"https://github.com/caperso\" className=\"contact-github \">\n                    <span className=\"iconfont icon-github\"></span> https://github.com/caperso\n                </a>\n                <a href=\"mail:273964183@qq.com\" className=\"contact-mail \">\n                    <span className=\"iconfont icon-mail\"></span> 273964183@qq.com\n                </a>\n                <a href=\"tencent://message/?uin=273964183\" className=\"contact-chat\">\n                    <span className=\"iconfont icon-chat\"></span> 273964183\n                </a>\n            </div>\n        </AboutWrapper>\n    );\n};\n\nexport const AboutWrapper = styled.div`\n    font-size: 1.5rem;\n    color: rgb(78, 78, 78, 0.6);\n    padding: 2rem;\n    .content:hover {\n        color: rgb(178, 178, 178, 0.6);\n    }\n    .contact-list {\n        padding: 2rem 0;\n        display: flex;\n        flex-flow: column;\n        color: rgb(178, 178, 178, 0.6);\n        a > span {\n            line-height: 3em;\n            font-weight: 700;\n            padding: 0 0.25em 0 0;\n        }\n        a:hover {\n            color: white;\n        }\n        [class*='contact-'] {\n            padding: 0.5rem 0;\n        }\n    }\n`;\n","import { format } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport ServerApi, { EstateDataDto, RecordData } from '../../../assets/js/service';\n\nconst EChart = React.lazy(() => {\n    return import(/* webpackChunkName: 'StockChart' */ './EChartGenerator');\n});\n\ninterface Props {\n    api: string; // where data from\n    extractMethod?: (value: string) => number;\n    children?: React.ReactNode;\n}\n\nexport const Chart = (props: Props) => {\n    const { api, children, extractMethod } = props;\n    const [records, setRecords] = useState<RecordData[]>([]);\n    const [chartData, setChartData] = useState<AxisData[]>([]);\n\n    useEffect(() => {\n        const fetchData = () =>\n            ServerApi.getListData<EstateDataDto[]>(api).then(res => {\n                const records = res.data.map(item => item.record);\n                setRecords(records);\n            });\n        fetchData();\n        const interval = setInterval(fetchData, 1000 * 60 * 60);\n        return () => clearInterval(interval);\n    }, [api]);\n\n    /*\n     * transform to axis data\n     */\n    useEffect(() => {\n        if (!records.length) {\n            return;\n        }\n        const data = chartDataGenerator(records, extractMethod);\n        if (data) {\n            setChartData(data);\n        }\n    }, [records, extractMethod]);\n\n    return (\n        <React.Suspense fallback={<div>Loading...</div>}>\n            {children}\n            {chartData.map((item, index) => (\n                <EChart data={item} key={index} />\n            ))}\n        </React.Suspense>\n    );\n};\n\n// Array format needs finally\ninterface AxisData {\n    name: string;\n    xValue: string[];\n    yValue: number[];\n}\n\nconst chartDataGenerator = (records: RecordData[], extractValue?: (value: string) => number): AxisData[] => {\n    let axisDataList: AxisData[] = Object.keys(records[0]).map(item => ({\n        name: item,\n        xValue: [],\n        yValue: [],\n    }));\n\n    // default: looking for first numbers in string,\n    // if method was in the props, use it\n    const extractValueDefault = (value: string) => {\n        return parseInt(value.match(/(\\d)+/g)![0], 10);\n    };\n\n    axisDataList.forEach(data => {\n        records.forEach(item => {\n            if (!Object.keys(item).length) {\n                return;\n            }\n            const { value, timestamp } = item[data.name]; // get specific data from resource name\n            data.xValue.push(format(parseInt(timestamp, 10), 'HH@dd/MM/yyyy'));\n            data.yValue.push(extractValue ? extractValue(value) : extractValueDefault(value));\n        });\n    });\n    return axisDataList;\n};\n","import React from 'react';\nimport { Chart } from './components/Chart';\n\nexport const EstateGraph = () => {\n    return <Chart api=\"list/estate\"></Chart>;\n};\n","import React from 'react';\nimport { Chart } from './components/Chart';\n\nexport const PriceGraph = () => {\n    const extractValue = (value: string)=>{\n        return parseInt(value.match(/(\\d+)/g)![0],10)\n    }\n    return <Chart api=\"list/price/youlinghu\" extractMethod={extractValue}></Chart>;\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { EstateGraph } from './EstateGraph';\nimport { PriceGraph } from './PriceGraph';\n\nexport const Graphs = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/home/graphs/estate\">\n                    <EstateGraph />\n                </Route>\n                <Route path=\"/home/graphs/price\">\n                    <PriceGraph />\n                </Route>\n                <Route path=\"/home/graphs/marketing\">Market data not available still digging</Route>\n            </Switch>\n        </div>\n    );\n};\n\n","import styled from 'styled-components';\n\nexport const Divide = styled.div`\n    width: 100%;\n    height: 2em;\n    line-height: 2em;\n`;\n","import { Levels } from 'gearware';\nimport 'gearware/lib/components/levels/index.css';\nimport { Level } from 'gearware/lib/components/levels/Levels';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { Divide } from './Divide';\n\nconst primaryLinks: Level[] = [\n    {\n        name: 'Gearware',\n        route: 'gears',\n        staticUrl: 'https://gears.caperal.cn',\n        description: 'React UI library',\n    },\n    { name: 'Kaleidoscope', route: 'kai', description: '一键生成Creo关系程序' },\n];\n\nconst secondaryLinks: Level[] = [\n    {\n        name: 'Charts',\n        route: 'graphs',\n        description: 'From my data collector',\n        deep: [\n            { name: 'Real Estate', route: 'estate', description: 'House Stock' },\n            { name: 'Price', route: 'price', description: 'item price' },\n        ],\n    },\n    { staticUrl: 'https://caperso.github.io/handnote/', name: 'Notes', description: 'My FE handnote' },\n    { route: 'about', name: 'About', description: 'Contact and more' },\n];\n\nexport const Links = () => {\n    const history = useHistory();\n\n    const handleRouteChange = (route: string) => {\n        const longRoute = '/home/'.concat(route);\n        history.replace(longRoute);\n        console.log(longRoute);\n    };\n\n    const activeStyle: React.CSSProperties = {\n        color: 'white',\n        animation: 'none',\n    };\n\n    return (\n        <LinksWrapper>\n            <Levels data={primaryLinks} />\n            <Divide />\n            <Levels data={secondaryLinks} singleActiveStyle={activeStyle} defaultExpanded={false} onChangeRoute={handleRouteChange} />\n        </LinksWrapper>\n    );\n};\n\nconst LinksWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 655px;\n    position: relative;\n\n    /* css hack */\n    .g-levels-wrapper {\n        div {\n            .g-levels-one {\n                padding: 0.5rem 0;\n                color: #444;\n                animation: none;\n\n                &:hover {\n                    color: white;\n                }\n\n                &:hover::after {\n                    color: #eee;\n                    font-weight: 300;\n                    font-size: 26px;\n                }\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n    position: relative;\n    color: white;\n    min-height: 120vh;\n    z-index:1;\n\n    .title {\n        padding: 4rem 2rem 4rem;\n\n        .spot-light {\n            position: relative;\n            font-size: 50px;\n            font-weight: 600;\n            line-height: 1.25;\n            color: #444;\n            text-transform: uppercase;\n            letter-spacing: 0.5rem;\n            &::after {\n                content: attr(data-spotlight);\n                position: absolute;\n                left: 0;\n                top: 0;\n                color: transparent;\n                -webkit-background-clip: text;\n                background-clip: text;\n                background-image: linear-gradient(to right, #12c2e9, #c471ed, #f64f59);\n                clip-path: ellipse(50px 50px at -20% 50%);\n                animation: spotlight 3s infinite ease-in-out;\n            }\n        }\n\n        & > h1,\n        h2 {\n        }\n\n        & > h2 {\n            font-weight: 600;\n            line-height: 1.25;\n            font-size: 30px;\n        }\n\n        & > p {\n            padding-top: 0.5rem;\n            font-size: 15px;\n            line-height: 15px;\n            margin-top: 10px;\n        }\n    }\n    .main-view {\n        padding: 0 2rem;\n        min-height: calc(100vh - 400px);\n    }\n`;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { About } from '../about/About';\nimport { Graphs } from '../graphs/Graphs';\nimport { Links } from './components/Links';\nimport { HomeWrapper } from './style';\n\nexport const Home = () => {\n    return (\n        <HomeWrapper>\n            <div className=\"title\">\n                <h1 className=\"spot-light\" data-spotlight=\"Caperal\">\n                    Caperal\n                </h1>\n                <br />\n                <h2>Caper's spacetown for </h2>\n                <h2>Data Charts, React Library, Docs, Notes </h2>\n                <p>\n                    For now, I'm developing &emsp;\n                    <span role=\"img\" aria-label=\"gear\">\n                        ⚙️ Gearware ⚙️\n                    </span>\n                </p>\n            </div>\n\n            <Links />\n\n            <div className=\"main-view\">\n                <Switch>\n                    <Route path=\"/home/graphs\" component={Graphs} />\n                    <Route path=\"/home/about\" component={About} />\n                </Switch>\n            </div>\n        </HomeWrapper>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const SiteRecord = () => {\n    return (\n        <SiteInfo>\n            <div className=\"site-text\">\n                <Anchor href=\"http://www.beian.miit.gov.cn/\" aria-label=\"link and check for this site\">\n                    <span role=\"img\" aria-label=\"emoji\">\n                        IPC证: 浙ICP备19047176号\n                    </span>\n                </Anchor>\n                <div>\n                    <span role=\"img\" aria-label=\"emoji\">\n                        ✨Build with React, gearware\n                        <br />\n                        ✨Serve by Nodejs and Nginx.\n                        <br />\n                        ✨Automatic deploy with travis-ci.\n                    </span>\n                </div>\n            </div>\n        </SiteInfo>\n    );\n};\n\nconst SiteInfo = styled.div`\n    font-weight: 400;\n    display: flex;\n    flex-flow: column;\n    padding-top: 2rem;\n    font-size: 12px;\n    color: white;\n    position: relative;\n    &:hover > .site-text {\n        background-color: rgba(0, 0, 0, 0.9);\n    }\n    .site-text {\n        margin: 1em;\n        padding: 1.5em;\n        border-radius: 5px;\n        box-sizing: border-box;\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: flex-end;\n\n        & > div {\n            text-align: right;\n            & > span {\n                &:hover {\n                    color: goldenrod;\n                }\n            }\n        }\n    }\n`;\n\nconst Anchor = styled.a`\n    color: white;\n    &:hover {\n        color: goldenrod;\n    }\n`;\n","import React from 'react';\nimport '../../assets/css/solar.css';\n\nexport const Solar = () => {\n    return (\n        <div className=\"solar-syst\">\n            <div className=\"sun\"></div>\n            <div className=\"mercury\"></div>\n            <div className=\"venus\"></div>\n            <div className=\"earth\"></div>\n            <div className=\"mars\"></div>\n            <div className=\"jupiter\"></div>\n            <div className=\"saturn\"></div>\n            <div className=\"uranus\"></div>\n            <div className=\"neptune\"></div>\n            <div className=\"pluto\"></div>\n            <div className=\"asteroids-belt\"></div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './assets/css/solar.css';\nimport { Heartbeat } from './components/core/Heartbeat';\nimport { Gallery } from './pages/gallery/Gallery';\nimport { HamButton } from './pages/home/components/HamButton';\nimport { Home } from './pages/home/Home';\nimport { SiteRecord } from './pages/site-record/SiteRecord';\nimport { Solar } from './pages/solar/Solar';\n\nconst App: React.FC = () => {\n    return (\n        <AppWrapper>\n            <HashRouter>\n                <div className=\"header\">\n                    <div className=\"header-left\">CAPERAL</div>\n                    <div className=\"header-right\">\n                        <HamButton />\n                    </div>\n                </div>\n                <Switch>\n                    <Redirect from=\"/\" exact={true} to=\"/home\" />\n                    <Route path=\"/home\" component={Home} />\n                    <Route path=\"/gallery\" component={Gallery} />\n                </Switch>\n                <SiteRecord />\n                <Solar />\n                <Heartbeat />\n            </HashRouter>\n        </AppWrapper>\n    );\n};\n\nexport default App;\n\nconst AppWrapper = styled.div`\n    .header {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        height: 4rem;\n        line-height: 4rem;\n        padding: 0 2rem;\n        text-transform: uppercase;\n        box-sizing: border-box;\n        color: rgb(102, 102, 102);\n\n        .header-left {\n            letter-spacing: 0.2rem;\n\n            &:hover {\n                color: white;\n            }\n        }\n\n        .header-right {\n            display: flex;\n            flex-flow: row;\n            position: relative;\n            justify-content: center;\n        }\n    }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/css/reset.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}