{"version":3,"sources":["pages/about/About.tsx","pages/graphs/Graphs.tsx","pages/thoughts/Thoughts.tsx","pages/home/components/HamButton.tsx","pages/home/components/Links.tsx","pages/home/style.ts","pages/home/Home.tsx","pages/site-record/SiteRecord.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","className","href","Graphs","styled","div","thoughtsList","text","postInfos","title","imageUrl","Thoughts","WorkWrapper","map","item","index","key","src","alt","style","padding","HamButton","HamWrapper","onClick","aria-label","to","Links","LinksWrapper","HomeWrapper","Home","path","exact","component","SiteRecord","SiteInfo","role","Anchor","a","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sfAGO,IAAMA,EAAQ,WACnB,OACE,yBAAKC,UAAU,SAAf,OAEE,uBAAGC,KAAK,uCAAR,QACA,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,uBCTVE,GDeeC,IAAOC,IAAV,KCfH,WAClB,OACI,gC,moBCDR,IAAMC,EAAe,CACnB,CAAEC,KAAM,qCACR,CAAEA,KAAM,kCACR,CAAEA,KAAM,+BAEJC,EAAY,CAChB,CACEC,MAAO,OACPC,SACE,4EACFH,KAAM,2DAER,CACEE,MAAO,YACPC,SACE,sEACFH,KAAM,sDAER,CACEE,MAAO,WACPC,SACE,uEACFH,KAAM,qDAIGI,EAAW,WACtB,OACE,kBAACC,EAAD,KACCJ,EAAUK,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKd,UAAU,iBAAiBe,IAAKD,GACnC,yBACEE,IAAKH,EAAKJ,SACVT,UAAU,kBACViB,IAAI,KAEN,yBAAKjB,UAAU,kBAAkBa,EAAKP,UAGtC,6BACF,oEACCD,EAAaO,KAAI,SAACC,EAAMC,GAAP,OAChB,yBAAKI,MAAO,CAACC,QAAS,aAAcJ,IAAKD,GACtCA,EAAQ,EADX,KACgBD,EAAKP,YAYhBK,EAAcR,IAAOC,IAAV,K,+mECtDjB,IAAMgB,EAAY,WAGvB,OACE,kBAACC,EAAD,KACE,uBAAGrB,UAAU,oBAAoBsB,QAJpB,aAIuCC,aAAW,SAC/D,yBAAKvB,UAAU,gBACb,kBAAC,IAAD,CAAMwB,GAAG,QAAQxB,UAAU,eAA3B,QAGA,kBAAC,IAAD,CAAMwB,GAAG,YAAYxB,UAAU,eAA/B,YAGA,kBAAC,IAAD,CAAMwB,GAAG,SAASxB,UAAU,eAA5B,YAQFqB,EAAalB,IAAOC,IAAV,K,mcCrBT,IAAMqB,EAAQ,WACnB,OACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAMF,GAAG,QAAQxB,UAAU,QAA3B,UAGA,kBAAC,IAAD,CAAMwB,GAAG,YAAYxB,UAAU,QAA/B,YAGA,kBAAC,IAAD,CAAMwB,GAAG,SAASxB,UAAU,QAA5B,WAOA0B,EAAevB,IAAOC,IAAV,K,2gCClBX,IAAMuB,EAAcxB,IAAOC,IAAV,KCQXwB,EAAO,WAClB,OAEE,kBAACD,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK3B,UAAU,UACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,QAIJ,yBAAKA,UAAU,SACb,yCACA,0CACA,qEAGF,kBAAC,EAAD,MAEA,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6B,KAAK,UAAUC,OAAO,EAAMC,UAAW7B,IAC9C,kBAAC,IAAD,CAAO2B,KAAK,YAAYC,OAAO,EAAMC,UAAWrB,IAChD,kBAAC,IAAD,CAAOmB,KAAK,SAASC,OAAO,EAAMC,UAAWhC,S,qdC/BlD,IAAMiC,EAAa,WACtB,OACI,kBAACC,EAAD,KACI,2BACI,0BAAMC,KAAK,MAAMX,aAAW,SAA5B,UADJ,kDAKI,0BAAMW,KAAK,MAAMX,aAAW,SAA5B,WAIJ,6BACA,mEAEI,0BAAMW,KAAK,MAAMX,aAAW,SAA5B,iBAIJ,kBAACY,EAAD,CAAQlC,KAAK,gCAAgCsB,aAAW,gCAAxD,8CAONU,EAAW9B,IAAOC,IAAV,KAaR+B,EAAShC,IAAOiC,EAAV,KC3BGC,EATO,WACpB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.72dd053f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const About = () => {\n  return (\n    <div className=\"about\">\n      I am\n      <a href=\"https://cutyourteeth.github.io/dist\">here</a>\n      <div className=\"contact-list\">\n        <div className=\"contact-tel\"></div>\n        <div className=\"contact-mail\"></div>\n        <div className=\"contact-address\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const AboutWrapper = styled.div`\n  font-size: 1.5rem;\n  color: rgb(78, 78, 78, 0.6);\n  padding: 2rem;\n\n  &:hover {\n    color: rgb(178, 178, 178, 0.6);\n\n    & > a {\n      color: white;\n    }\n  }\n`;\n","import React from 'react'\n\nexport const Graphs = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst thoughtsList = [\n  { text: \"keep myself as an independent one\" },\n  { text: \"coding is an implement of art \" },\n  { text: \"Good habits serve everyone\" }\n];\nconst postInfos = [\n  {\n    title: \"coon\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2017/01/15/19/04/red-panda-1982445__340.jpg\",\n    text: \"the coon:\\n\\nOne of the coons just ran out of your mind\"\n  },\n  {\n    title: \"the woods\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2018/08/21/23/29/fog-3622519__340.jpg\",\n    text: \"the woods:\\n\\nQuite miss about it's peaceful sound\"\n  },\n  {\n    title: \"the fall\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg\",\n    text: \"the fall:\\n\\nEverything falls in the end, right?\"\n  }\n];\n\nexport const Thoughts = () => {\n  return (\n    <WorkWrapper>\n    {postInfos.map((item, index) => (\n      <div className=\"work-list-item\" key={index}>\n        <img\n          src={item.imageUrl}\n          className=\"work-list-image\"\n          alt=\"\"\n        />\n        <div className=\"work-list-text\">{item.text}</div>\n      </div>\n    ))}\n        <div>\n      <div>representing saytote - chat to note</div>\n      {thoughtsList.map((item, index) => (\n        <div style={{padding: \"1rem 2rem\"}} key={index}>\n          {index + 1}. {item.text}\n        </div>\n      ))}\n    </div>\n  </WorkWrapper>\n\n  );\n};\n\n\n\n\nexport const WorkWrapper = styled.div`\n  .work-list-item {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .work-list-image,\n  .work-list-text {\n    padding: 4rem 0 0 2rem;\n    box-sizing: border-box;\n    width: 32rem;\n\n    @media screen and (max-width: 768px) {\n      width: 80%;\n    }\n  }\n\n  .work-list-text {\n    top: 0;\n    margin: 4rem 0 0 2rem;\n    opacity: 0;\n    height: 100%;\n    position: absolute;\n    white-space: pre-wrap;\n  }\n\n  .work-list-text:hover,\n  .work-list-image:hover ~ .work-list-text {\n    opacity: 1;\n    background-color: rgba(17, 17, 17, 0.6);\n  }\n`;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HamButton = () => {\n  const showMenu = () => {};\n\n  return (\n    <HamWrapper>\n      <i className=\"header-ham-button\" onClick={showMenu} aria-label=\"menu\"></i>\n      <div className=\"header-links\">\n        <Link to=\"/work\" className=\"header-link\">\n          WORK\n        </Link>\n        <Link to=\"/thoughts\" className=\"header-link\">\n          THOUGHTS\n        </Link>\n        <Link to=\"/about\" className=\"header-link\">\n          ABOUT\n        </Link>\n      </div>\n    </HamWrapper>\n  );\n};\n\nconst HamWrapper = styled.div`\n.header-links > * {\n        margin-left: 1rem;\n        letter-spacing: 0.1rem;\n      }\n\n      .header-links > *:hover {\n        color: white;\n      }\n\n      .header-ham-button {\n        opacity: 0;\n        visibility: hidden;\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translateY(-50%);\n        display: block;\n        width: 1.5625rem;\n        height: 1.5625rem;\n        border: 0.08rem solid rgb(102, 102, 102);\n        border-radius: 0.175rem;\n        background-color: transparent;\n        cursor: pointer;\n\n        &:after {\n          content: \"\";\n          position: absolute;\n          left: 50%;\n          transform: translateX(-50%);\n          width: 60%;\n          height: 100%;\n          background: repeating-linear-gradient(\n            transparent 0,\n            transparent 20%,\n            rgb(142, 142, 142) 22%,\n            rgb(142, 142, 142) 28%,\n            transparent 30%,\n            transparent 45%,\n            rgb(142, 142, 142) 47%,\n            rgb(142, 142, 142) 53%,\n            transparent 55%,\n            transparent 70%,\n            rgb(142, 142, 142) 72%,\n            rgb(142, 142, 142) 78%,\n            transparent 80%,\n            transparent 100%\n          );\n        }\n      }\n\n      @media screen and (max-width: 768px) {\n        .header-links {\n          display: flex;\n          position: absolute;\n          top: calc(2rem + 1.5625rem / 2);\n          right: 0%;\n          line-height: 3.15;\n          text-align: right;\n          flex-flow: column;\n          justify-content: flex-start;\n        }\n\n        .header-links {\n          opacity: 0;\n          visibility: hidden;\n        }\n\n        .header-ham-button {\n          opacity: 1;\n          visibility: visible;\n        }\n\n        .header-ham-button:hover ~ .header-links,\n        .header-links:hover {\n          opacity: 1;\n          visibility: visible;\n          border-top: none;\n          border-right: none;\n          border-radius: 2px;\n        }\n      }\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Links = () => {\n  return (\n    <LinksWrapper>\n      <Link to=\"/work\" className=\"link\">\n        Graphs\n      </Link>\n      <Link to=\"/thoughts\" className=\"link\">\n        Thoughts\n      </Link>\n      <Link to=\"/about\" className=\"link\">\n        About\n      </Link>\n    </LinksWrapper>\n  );\n};\n\nconst LinksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 2rem;\n  .link {\n    padding: 0.5rem 0;\n    font-size: 45px;\n    color: gray;\n    font-weight: bold;\n    text-decoration: none;\n    transition: background-color 0.15s linear, color 0.15s linear;\n    &:hover {\n      color: #2dc6ad;\n      filter: hue-rotate();\n      animation: hue-trans 5s infinite;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  position: relative;\n  color: white;\n  min-height: 120vh;\n\n  .title {\n    padding: 6rem 2rem 4rem;\n\n    & > h1 {\n      font-size: 50px;\n      font-weight: 600;\n      line-height: 1.25;\n      text-transform: uppercase;\n      letter-spacing: 0.1rem;\n    }\n\n    & > p {\n      padding-top: 0.5rem;\n      font-size: 15px;\n      line-height: 15px;\n      margin-top: 10px;\n    }\n  }\n  .main-view {\n    min-height: calc(100vh - 400px);\n  }\n  .header {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    height: 4rem;\n    line-height: 4rem;\n    padding: 0 2rem;\n    text-transform: uppercase;\n    box-sizing: border-box;\n    color: rgb(102, 102, 102);\n\n    .header-left {\n      letter-spacing: 0.2rem;\n\n      &:hover {\n        color: white;\n      }\n    }\n\n    .header-right {\n      display: flex;\n      flex-flow: row;\n      position: relative;\n      justify-content: center;\n    }\n  }\n`;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { About } from \"../about/About\";\nimport { Graphs } from \"../graphs/Graphs\";\nimport { Thoughts } from \"../thoughts/Thoughts\";\nimport { HamButton } from \"./components/HamButton\";\nimport { Links } from \"./components/Links\";\n// import \"./style.scss\";\nimport { HomeWrapper } from \"./style\";\n\nexport const Home = () => {\n  return (\n    // <div className=\"wrapper\">\n    <HomeWrapper>\n      <HashRouter>\n        <div className=\"header\">\n          <div className=\"header-left\">CAPERAL</div>\n          <div className=\"header-right\">\n            <HamButton />\n          </div>\n        </div>\n\n        <div className=\"title\">\n          <h1>Be a man,</h1>\n          <h1>Half blind</h1>\n          <p>Mind your own, leave out all the rest</p>\n        </div>\n\n        <Links/>\n        \n        <div className=\"main-view\">\n          <Switch>\n            <Route path=\"/graphs\" exact={true} component={Graphs} />\n            <Route path=\"/thoughts\" exact={true} component={Thoughts} />\n            <Route path=\"/about\" exact={true} component={About} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </HomeWrapper>\n    // </div>\n  );\n};\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const SiteRecord = () => {\n    return (\n        <SiteInfo>\n            <p>\n                <span role=\"img\" aria-label=\"emoji\">\n                    ✨\n                </span>\n                This site is under developing, see you soon&nbsp;\n                <span role=\"img\" aria-label=\"emoji\">\n                    ✨\n                </span>\n            </p>\n            <br />\n            <p>\n                Written by Caper with passion and&nbsp;\n                <span role=\"img\" aria-label=\"emoji\">\n                    ❤️\n                </span>\n            </p>\n            <Anchor href=\"http://www.beian.miit.gov.cn/\" aria-label=\"link and check for this site\">\n                IPC证: 浙ICP备19047176号\n            </Anchor>\n        </SiteInfo>\n    )\n}\n\nconst SiteInfo = styled.div`\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    padding: 1rem 2rem;\n    margin-top: 2rem;\n    font-size: 14px;\n    color: white;\n    & > p:hover {\n        color: goldenrod;\n    }\n`\n\nconst Anchor = styled.a`\n    padding: 1rem 2rem;\n    color: white;\n    font-size: 12px;\n    &:hover {\n        color: goldenrod;\n    }\n`\n","import React from \"react\";\nimport \"./common/css/animations.css\";\nimport \"./common/css/reset.css\";\nimport { Home } from \"./pages/home/Home\";\nimport { SiteRecord } from \"./pages/site-record/SiteRecord\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Home />\n      <SiteRecord />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}