{"version":3,"sources":["pages/about/About.tsx","components/core/StyledLink.tsx","assets/js/service.ts","pages/graphs/components/axisDataGenerator.ts","pages/graphs/components/Chart.tsx","pages/graphs/components/EstateGraph.tsx","pages/graphs/components/PriceGraph.tsx","pages/graphs/Graphs.tsx","pages/thoughts/Thoughts.tsx","pages/home/components/HamButton.tsx","pages/home/components/Links.tsx","pages/home/style.ts","pages/home/Home.tsx","pages/site-record/SiteRecord.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","className","href","styled","div","StyledLink","Link","ServerApi","api","name","destination","axios","get","this","serverUrl","result","chartDataGenerator","records","extractValue","axisDataList","Object","keys","map","item","xValue","yValue","forEach","data","length","value","timestamp","push","moment","parseInt","format","match","extractValueDefault","Chart","props","children","extractMethod","useState","setRecords","graphData","setGraphData","useEffect","fetchData","getListData","then","res","record","interval","setInterval","clearInterval","axis","d","tooltip","trigger","position","pt","title","left","text","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","type","boundaryGap","yAxis","scale","start","end","handleIcon","handleSize","handleStyle","color","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","smooth","symbol","sampling","itemStyle","areaStyle","axisGenerator","index","option","key","EstateGraph","PriceGraph","Graphs","LinksWrapper","to","path","thoughtsList","postInfos","imageUrl","Thoughts","WorkWrapper","src","alt","style","padding","HamButton","HamWrapper","onClick","aria-label","Links","HomeWrapper","Home","component","SiteRecord","SiteInfo","role","Anchor","a","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.496e1e1e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const About = () => {\n  return (\n    <div className=\"about\">\n      I am\n      <a href=\"https://cutyourteeth.github.io/dist\">here</a>\n      <div className=\"contact-list\">\n        <div className=\"contact-tel\"></div>\n        <div className=\"contact-mail\"></div>\n        <div className=\"contact-address\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const AboutWrapper = styled.div`\n  font-size: 1.5rem;\n  color: rgb(78, 78, 78, 0.6);\n  padding: 2rem;\n\n  &:hover {\n    color: rgb(178, 178, 178, 0.6);\n\n    & > a {\n      color: white;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n    padding: 0.5rem 0;\n    font-size: 45px;\n    color: gray;\n    font-weight: bold;\n    text-decoration: none;\n    &:hover {\n        color: #2dc6ad;\n        filter: hue-rotate();\n        animation: hue-trans 7s infinite;\n    }\n`;\n\nexport default StyledLink;\n","import axios, { AxiosResponse } from 'axios';\n\nexport interface RecordData {\n    [propName: string]: { timestamp: string; value: string };\n}\n\ninterface BaseDataDto {\n    id: number;\n    record: RecordData;\n    createAt?: string;\n    updateAt?: string;\n    deleteAt?: string;\n}\nexport interface EstateDataDto extends BaseDataDto {}\nexport interface PriceDataDto extends BaseDataDto {}\n\n/**\n * 用于调用服务端接口\n * @export\n */\nexport default class ServerApi {\n    public static serverUrl = 'http://caperal.cn:3141';\n    // public static serverUrl = 'http://localhost:3141'\n\n    public static async getListData<T = AxiosResponse<BaseDataDto[]>>(api: string, name?: string) {\n        let destination = name ? `${api}/${name}` : `${api}`;\n        const result = await axios.get<T>(`${this.serverUrl}/${destination}`);\n        return result;\n    }\n}\n","import moment from 'moment';\nimport { RecordData } from '../../../assets/js/service';\n// Array format needs finally\ninterface AxisData {\n    name: string;\n    xValue: string[];\n    yValue: number[];\n}\n\nexport const chartDataGenerator = (records: RecordData[], extractValue?: (value: string) => number): AxisData[] => {\n    let axisDataList: AxisData[] = Object.keys(records[0]).map(item => ({\n        name: item,\n        xValue: [],\n        yValue: [],\n    }));\n\n    // default: looking for first numbers in string,\n    // if method was in the props, use it\n    const extractValueDefault = (value: string) => {\n        return parseInt(value.match(/(\\d)+/g)![0], 10);\n    };\n    \n    axisDataList.forEach(data => {\n        records.forEach(item => {\n            if (!Object.keys(item).length) {\n                return;\n            }\n            const { value, timestamp } = item[data.name]; // get specific data from resource name\n            data.xValue.push(moment(parseInt(timestamp, 10)).format(\"HH' DD/MMM/YYYY\"));\n            data.yValue.push(extractValue ? extractValue(value) : extractValueDefault(value));\n        });\n    });\n    return axisDataList;\n};\n\nexport const axisGenerator = (data: AxisData) => {\n    const { name, xValue, yValue } = data;\n    return {\n        tooltip: {\n            trigger: 'axis',\n            position: function(pt: any) {\n                return [pt[0], '10%'];\n            },\n        },\n        title: {\n            left: 'center',\n            text: `source for ${name}`,\n        },\n        toolbox: {\n            feature: {\n                dataZoom: {\n                    yAxisIndex: 'none',\n                },\n                restore: {},\n                saveAsImage: {},\n            },\n        },\n        xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: xValue,\n        },\n        yAxis: {\n            scale: true,\n            type: 'value',\n            boundaryGap: [0, '100%'],\n        },\n        dataZoom: [\n            {\n                type: 'inside',\n                start: 0,\n                end: 10,\n            },\n            {\n                start: 0,\n                end: 10,\n                handleIcon:\n                    'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                handleSize: '80%',\n                handleStyle: {\n                    color: '#fff',\n                    shadowBlur: 3,\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\n                    shadowOffsetX: 2,\n                    shadowOffsetY: 2,\n                },\n            },\n        ],\n        series: [\n            {\n                name: 'Total amount',\n                type: 'line',\n                smooth: true,\n                symbol: 'none',\n                sampling: 'average',\n                itemStyle: {\n                    color: 'rgb(255, 70, 131)',\n                },\n                areaStyle: {\n                    // color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    //     {\n                    //         offset: 0,\n                    //         color: 'rgb(255, 158, 68)'\n                    //     },\n                    //     {\n                    //         offset: 1,\n                    //         color: 'rgb(255, 70, 131)'\n                    //     }\n                    // ])\n                },\n                data: yValue,\n            },\n        ],\n    };\n};\n","import ReactEcharts from 'echarts-for-react';\nimport React, { useEffect, useState } from 'react';\nimport ServerApi, { EstateDataDto, RecordData } from '../../../assets/js/service';\nimport { axisGenerator, chartDataGenerator } from './axisDataGenerator';\n\ninterface Props {\n    api: string; // where data from\n    extractMethod?: (value: string) => number;\n    children?: React.ReactNode;\n}\n\nexport const Chart = (props: Props) => {\n    const { api, children, extractMethod } = props;\n    const [records, setRecords] = useState<RecordData[]>([]);\n    const [graphData, setGraphData] = useState<any[]>([]);\n\n    useEffect(() => {\n        const fetchData = () =>\n            ServerApi.getListData<EstateDataDto[]>(api).then(res => {\n                const records = res.data.map(item => item.record);\n                setRecords(records);\n            });\n        fetchData();\n        const interval = setInterval(fetchData, 1000 * 60 * 60);\n        return () => clearInterval(interval);\n    }, [api]);\n\n    /*\n     * transform to axis data\n     */\n    useEffect(() => {\n        if (!records.length) {\n            return;\n        }\n        const data = chartDataGenerator(records, extractMethod);\n        if (data) {\n            const axis = data.map(d => axisGenerator(d));\n            setGraphData(axis);\n        }\n    }, [records,extractMethod]);\n\n    return (\n        <>\n            {children}\n            {graphData.map((item, index) => (\n                <ReactEcharts option={item} key={index} />\n            ))}\n        </>\n    );\n};\n","import React from 'react';\nimport { Chart } from './Chart';\n\nexport const EstateGraph = () => {\n    return <Chart api=\"list/estate\"></Chart>;\n};\n","import React from 'react';\nimport { Chart } from './Chart';\n\nexport const PriceGraph = () => {\n    const extractValue = (value: string)=>{\n        return parseInt(value.match(/(\\d+)/g)![0],10)\n    }\n    return <Chart api=\"list/price/youlinghu\" extractMethod={extractValue}></Chart>;\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport styled from 'styled-components';\nimport StyledLink from '../../components/core/StyledLink';\nimport { EstateGraph } from './components/EstateGraph';\nimport { PriceGraph } from './components/PriceGraph';\n\nexport const Graphs = () => {\n    return (\n        <div>\n            <LinksWrapper>\n                <StyledLink to=\"/graphs/estate\">Real-Estate</StyledLink>\n                <StyledLink to=\"/graphs/price\">Price</StyledLink>\n            </LinksWrapper>\n            <Switch>\n                <Route path=\"/graphs/estate\">\n                    <EstateGraph />\n                </Route>\n                <Route path=\"/graphs/price\">\n                    <PriceGraph />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nconst LinksWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 2rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst thoughtsList = [\n  { text: \"keep myself as an independent one\" },\n  { text: \"coding is an implement of art \" },\n  { text: \"Good habits serve everyone\" }\n];\nconst postInfos = [\n  {\n    title: \"coon\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2017/01/15/19/04/red-panda-1982445__340.jpg\",\n    text: \"the coon:\\n\\nOne of the coons just ran out of your mind\"\n  },\n  {\n    title: \"the woods\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2018/08/21/23/29/fog-3622519__340.jpg\",\n    text: \"the woods:\\n\\nQuite miss about it's peaceful sound\"\n  },\n  {\n    title: \"the fall\",\n    imageUrl:\n      \"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg\",\n    text: \"the fall:\\n\\nEverything falls in the end, right?\"\n  }\n];\n\nexport const Thoughts = () => {\n  return (\n    <WorkWrapper>\n    {postInfos.map((item, index) => (\n      <div className=\"work-list-item\" key={index}>\n        <img\n          src={item.imageUrl}\n          className=\"work-list-image\"\n          alt=\"\"\n        />\n        <div className=\"work-list-text\">{item.text}</div>\n      </div>\n    ))}\n        <div>\n      <div>representing saytote - chat to note</div>\n      {thoughtsList.map((item, index) => (\n        <div style={{padding: \"1rem 2rem\"}} key={index}>\n          {index + 1}. {item.text}\n        </div>\n      ))}\n    </div>\n  </WorkWrapper>\n\n  );\n};\n\n\n\n\nexport const WorkWrapper = styled.div`\n  .work-list-item {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .work-list-image,\n  .work-list-text {\n    padding: 4rem 0 0 2rem;\n    box-sizing: border-box;\n    width: 32rem;\n\n    @media screen and (max-width: 768px) {\n      width: 80%;\n    }\n  }\n\n  .work-list-text {\n    top: 0;\n    margin: 4rem 0 0 2rem;\n    opacity: 0;\n    height: 100%;\n    position: absolute;\n    white-space: pre-wrap;\n  }\n\n  .work-list-text:hover,\n  .work-list-image:hover ~ .work-list-text {\n    opacity: 1;\n    background-color: rgba(17, 17, 17, 0.6);\n  }\n`;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HamButton = () => {\n  const showMenu = () => {};\n\n  return (\n    <HamWrapper>\n      <i className=\"header-ham-button\" onClick={showMenu} aria-label=\"menu\"></i>\n      <div className=\"header-links\">\n        <Link to=\"/work\" className=\"header-link\">\n          WORK\n        </Link>\n        <Link to=\"/thoughts\" className=\"header-link\">\n          THOUGHTS\n        </Link>\n        <Link to=\"/about\" className=\"header-link\">\n          ABOUT\n        </Link>\n      </div>\n    </HamWrapper>\n  );\n};\n\nconst HamWrapper = styled.div`\n.header-links > * {\n        margin-left: 1rem;\n        letter-spacing: 0.1rem;\n      }\n\n      .header-links > *:hover {\n        color: white;\n      }\n\n      .header-ham-button {\n        opacity: 0;\n        visibility: hidden;\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translateY(-50%);\n        display: block;\n        width: 1.5625rem;\n        height: 1.5625rem;\n        border: 0.08rem solid rgb(102, 102, 102);\n        border-radius: 0.175rem;\n        background-color: transparent;\n        cursor: pointer;\n\n        &:after {\n          content: \"\";\n          position: absolute;\n          left: 50%;\n          transform: translateX(-50%);\n          width: 60%;\n          height: 100%;\n          background: repeating-linear-gradient(\n            transparent 0,\n            transparent 20%,\n            rgb(142, 142, 142) 22%,\n            rgb(142, 142, 142) 28%,\n            transparent 30%,\n            transparent 45%,\n            rgb(142, 142, 142) 47%,\n            rgb(142, 142, 142) 53%,\n            transparent 55%,\n            transparent 70%,\n            rgb(142, 142, 142) 72%,\n            rgb(142, 142, 142) 78%,\n            transparent 80%,\n            transparent 100%\n          );\n        }\n      }\n\n      @media screen and (max-width: 768px) {\n        .header-links {\n          display: flex;\n          position: absolute;\n          top: calc(2rem + 1.5625rem / 2);\n          right: 0%;\n          line-height: 3.15;\n          text-align: right;\n          flex-flow: column;\n          justify-content: flex-start;\n        }\n\n        .header-links {\n          opacity: 0;\n          visibility: hidden;\n        }\n\n        .header-ham-button {\n          opacity: 1;\n          visibility: visible;\n        }\n\n        .header-ham-button:hover ~ .header-links,\n        .header-links:hover {\n          opacity: 1;\n          visibility: visible;\n          border-top: none;\n          border-right: none;\n          border-radius: 2px;\n        }\n      }\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport StyledLink from '../../../components/core/StyledLink';\n\nexport const Links = () => {\n    return (\n        <LinksWrapper>\n            <StyledLink to=\"/graphs\">Graphs</StyledLink>\n            <StyledLink to=\"/thoughts\">Thoughts</StyledLink>\n            <StyledLink to=\"/about\">About</StyledLink>\n        </LinksWrapper>\n    );\n};\n\nconst LinksWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 2rem;\n`;\n","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  position: relative;\n  color: white;\n  min-height: 120vh;\n\n  .title {\n    padding: 6rem 2rem 4rem;\n\n    & > h1 {\n      font-size: 50px;\n      font-weight: 600;\n      line-height: 1.25;\n      text-transform: uppercase;\n      letter-spacing: 0.1rem;\n    }\n\n    & > p {\n      padding-top: 0.5rem;\n      font-size: 15px;\n      line-height: 15px;\n      margin-top: 10px;\n    }\n  }\n  .main-view {\n    min-height: calc(100vh - 400px);\n  }\n  .header {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    height: 4rem;\n    line-height: 4rem;\n    padding: 0 2rem;\n    text-transform: uppercase;\n    box-sizing: border-box;\n    color: rgb(102, 102, 102);\n\n    .header-left {\n      letter-spacing: 0.2rem;\n\n      &:hover {\n        color: white;\n      }\n    }\n\n    .header-right {\n      display: flex;\n      flex-flow: row;\n      position: relative;\n      justify-content: center;\n    }\n  }\n`;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { About } from \"../about/About\";\nimport { Graphs } from \"../graphs/Graphs\";\nimport { Thoughts } from \"../thoughts/Thoughts\";\nimport { HamButton } from \"./components/HamButton\";\nimport { Links } from \"./components/Links\";\n// import \"./style.scss\";\nimport { HomeWrapper } from \"./style\";\n\nexport const Home = () => {\n  return (\n    // <div className=\"wrapper\">\n    <HomeWrapper>\n      <HashRouter>\n        <div className=\"header\">\n          <div className=\"header-left\">CAPERAL</div>\n          <div className=\"header-right\">\n            <HamButton />\n          </div>\n        </div>\n\n        <div className=\"title\">\n          <h1>Be a man,</h1>\n          <h1>Half blind</h1>\n          <p>Mind your own, leave out all the rest</p>\n        </div>\n\n        <Links/>\n        \n        <div className=\"main-view\">\n          <Switch>\n            <Route path=\"/graphs\" component={Graphs} />\n            <Route path=\"/thoughts\" component={Thoughts} />\n            <Route path=\"/about\" component={About} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </HomeWrapper>\n    // </div>\n  );\n};\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const SiteRecord = () => {\n    return (\n        <SiteInfo>\n            <p>\n                <span role=\"img\" aria-label=\"emoji\">\n                    ✨\n                </span>\n                This site is under developing, see you soon&nbsp;\n                <span role=\"img\" aria-label=\"emoji\">\n                    ✨\n                </span>\n            </p>\n            <br/>\n            <p>\n                Written by Caper with passion and&nbsp;\n                <span role=\"img\" aria-label=\"emoji\">\n                    ❤️\n                </span>\n            </p>\n            <Anchor href=\"http://www.beian.miit.gov.cn/\" aria-label=\"link and check for this site\">\n                IPC证: 浙ICP备19047176号\n            </Anchor>\n        </SiteInfo>\n    )\n}\n\nconst SiteInfo = styled.div`\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    padding: 1rem 2rem;\n    margin-top: 2rem;\n    font-size: 14px;\n    color: white;\n    & > p:hover {\n        color: goldenrod;\n    }\n`\n\nconst Anchor = styled.a`\n    padding: 1rem 2rem;\n    color: white;\n    font-size: 12px;\n    &:hover {\n        color: goldenrod;\n    }\n`\n","import React from \"react\";\nimport \"./assets/css/animations.css\";\nimport \"./assets/css/reset.css\";\nimport { Home } from \"./pages/home/Home\";\nimport { SiteRecord } from \"./pages/site-record/SiteRecord\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Home />\n      <SiteRecord />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}