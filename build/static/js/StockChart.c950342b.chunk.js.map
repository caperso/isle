{"version":3,"sources":["pages/graphs/components/EChartGenerator.tsx"],"names":["EChartGenerator","props","className","echarts","option","chartDataGenerator","data","name","xValue","yValue","tooltip","trigger","position","pt","title","left","text","textStyle","color","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","type","boundaryGap","axisLabel","yAxis","scale","start","end","handleIcon","handleSize","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","smooth","symbol","sampling","itemStyle","areaStyle","graphic","LinearGradient","offset"],"mappings":"gGAAA,0GAmBeA,UAJS,SAACC,GACrB,OAAO,kBAAC,IAAD,CAAkBC,UAAU,aAAaC,QAASA,IAASC,OAAQC,EAAmBJ,EAAMK,SAWvG,IAAMD,EAAqB,SAACC,GAAoB,IACpCC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OACtB,MAAO,CACHC,QAAS,CACLC,QAAS,OACTC,SAAU,SAAUC,GAChB,MAAO,CAACA,EAAG,GAAI,SAGvBC,MAAO,CACHC,KAAM,OACNC,KAAK,GAAD,OAAKT,GACTU,UAAW,CACPC,MAAO,UAGfC,QAAS,CACLC,QAAS,CACLC,SAAU,CACNC,WAAY,QAEhBC,QAAS,GACTC,YAAa,KAGrBC,MAAO,CACHC,KAAM,WACNC,aAAa,EACbrB,KAAME,EACNoB,UAAW,CAAEV,MAAO,UAExBW,MAAO,CACHC,OAAO,EACPJ,KAAM,QACNC,YAAa,CAAC,EAAG,QACjBC,UAAW,CAAEV,MAAO,UAExBG,SAAU,CACN,CACIK,KAAM,SACNK,MAAO,EACPC,IAAK,IAET,CACID,MAAO,EACPC,IAAK,GACLC,WACI,qMACJC,WAAY,MACZC,YAAa,CACTjB,MAAO,OACPkB,WAAY,EACZC,YAAa,qBACbC,cAAe,EACfC,cAAe,KAI3BC,OAAQ,CACJ,CACIjC,KAAM,QACNmB,KAAM,OACNe,QAAQ,EACRC,OAAQ,OACRC,SAAU,UACVC,UAAW,CACP1B,MAAO,aAEX2B,UAAW,CACP3B,MAAO,IAAIf,IAAQ2C,QAAQC,eAAe,EAAG,EAAG,EAAG,EAAG,CAClD,CACIC,OAAQ,EACR9B,MAAO,WAGX,CACI8B,OAAQ,EACR9B,MAAO,cAInBZ,KAAMG","file":"static/js/StockChart.c950342b.chunk.js","sourcesContent":["// manually load ECharts file shrink bundle size\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/dataZoom';\nimport 'echarts/lib/component/singleAxis';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/tooltip';\nimport echarts from 'echarts/lib/echarts';\nimport React from 'react';\n\ninterface Props {\n    data: AxisData;\n}\n\nconst EChartGenerator = (props: Props) => {\n    return <ReactEchartsCore className='chart-item' echarts={echarts} option={chartDataGenerator(props.data)} />;\n};\n\nexport default EChartGenerator;\n\nexport interface AxisData {\n    name: string;\n    xValue: string[];\n    yValue: number[];\n}\n\nconst chartDataGenerator = (data: AxisData) => {\n    const { name, xValue, yValue } = data;\n    return {\n        tooltip: {\n            trigger: 'axis',\n            position: function (pt: any) {\n                return [pt[0], '10%'];\n            },\n        },\n        title: {\n            left: 'left',\n            text: `${name}`,\n            textStyle: {\n                color: 'white',\n            },\n        },\n        toolbox: {\n            feature: {\n                dataZoom: {\n                    yAxisIndex: 'none',\n                },\n                restore: {},\n                saveAsImage: {},\n            },\n        },\n        xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: xValue,\n            axisLabel: { color: 'white' },\n        },\n        yAxis: {\n            scale: true,\n            type: 'value',\n            boundaryGap: [0, '100%'],\n            axisLabel: { color: 'white' },\n        },\n        dataZoom: [\n            {\n                type: 'inside',\n                start: 0,\n                end: 10,\n            },\n            {\n                start: 0,\n                end: 10,\n                handleIcon:\n                    'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                handleSize: '80%',\n                handleStyle: {\n                    color: '#fff',\n                    shadowBlur: 3,\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\n                    shadowOffsetX: 2,\n                    shadowOffsetY: 2,\n                },\n            },\n        ],\n        series: [\n            {\n                name: 'total',\n                type: 'line',\n                smooth: true,\n                symbol: 'none',\n                sampling: 'average',\n                itemStyle: {\n                    color: '#FD658580',\n                },\n                areaStyle: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: '#FD6585',\n                        },\n\n                        {\n                            offset: 1,\n                            color: '#0D25B9',\n                        },\n                    ]),\n                },\n                data: yValue,\n            },\n        ],\n    };\n};\n"],"sourceRoot":""}