{"version":3,"sources":["components/subs/About.tsx","components/subs/Thoughts.tsx","components/subs/style.ts","components/subs/Works.tsx","components/main/style.ts","components/main/Home.tsx","components/main/SiteRecord.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","className","href","thoughtsList","text","Thoughts","map","item","index","style","padding","key","WorkWrapper","styled","div","postInfos","title","imageUrl","Works","src","alt","HomeWrapper","Home","onClick","aria-label","to","path","exact","component","SiteRecord","SiteInfo","role","Anchor","a","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAEaA,EAAQ,WACnB,OACE,yBAAKC,UAAU,SAAf,OAEE,uBAAGC,KAAK,uCAAR,QACA,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,uBCRjBE,EAAe,CACnB,CAAEC,KAAM,qCACR,CAAEA,KAAM,kCACR,CAAEA,KAAM,+BAGGC,EAAW,WACtB,OACE,6BACGF,EAAaG,KAAI,SAACC,EAAMC,GAAP,OAChB,yBAAKC,MAAO,CAACC,QAAS,aAAcC,IAAKH,GACtCA,EAAQ,EADX,KACgBD,EAAKH,W,w0BCVtB,IAAMQ,EAAcC,IAAOC,IAAV,KCDlBC,GD+BsBF,IAAOC,IAAV,KC/BP,CAChB,CACEE,MAAO,OACPC,SACE,4EACFb,KAAM,2DAER,CACEY,MAAO,YACPC,SACE,sEACFb,KAAM,sDAER,CACEY,MAAO,WACPC,SACE,uEACFb,KAAM,sDAIGc,EAAQ,WACnB,OACE,kBAACN,EAAD,KACGG,EAAUT,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKP,UAAU,iBAAiBU,IAAKH,GACnC,yBACEW,IAAKZ,EAAKU,SACVhB,UAAU,kBACVmB,IAAI,KAEN,yBAAKnB,UAAU,kBAAkBM,EAAKH,Y,+gGC9BzC,IAAMiB,EAAcR,IAAOC,IAAV,KCIXQ,EAAO,WAGlB,OACE,kBAACD,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKpB,UAAU,UACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,gBACb,uBACEA,UAAU,oBACVsB,QAVK,aAWLC,aAAW,SAEb,yBAAKvB,UAAU,gBACb,kBAAC,IAAD,CAAMwB,GAAG,QAAQxB,UAAU,eAA3B,QAGA,kBAAC,IAAD,CAAMwB,GAAG,YAAYxB,UAAU,eAA/B,YAGA,kBAAC,IAAD,CAAMwB,GAAG,SAASxB,UAAU,eAA5B,YAON,yBAAKA,UAAU,SACb,gDACA,qDACA,kEAGF,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyB,KAAK,QAAQC,OAAO,EAAMC,UAAWV,IAC5C,kBAAC,IAAD,CAAOQ,KAAK,YAAYC,OAAO,EAAMC,UAAWvB,IAChD,kBAAC,IAAD,CAAOqB,KAAK,SAASC,OAAO,EAAMC,UAAW5B,S,qdC1ClD,IAAM6B,EAAa,WACtB,OACI,kBAACC,EAAD,KACI,2BACI,0BAAMC,KAAK,MAAMP,aAAW,SAA5B,UADJ,kDAKI,0BAAMO,KAAK,MAAMP,aAAW,SAA5B,WAIJ,6BACA,mEAEI,0BAAMO,KAAK,MAAMP,aAAW,SAA5B,iBAIJ,kBAACQ,EAAD,CAAQ9B,KAAK,gCAAgCsB,aAAW,gCAAxD,8CAONM,EAAWjB,IAAOC,IAAV,KAaRkB,EAASnB,IAAOoB,EAAV,KC3BGC,EATO,WACpB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0ac0a8ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      I am\r\n      <a href=\"https://cutyourteeth.github.io/dist\">here</a>\r\n      <div className=\"contact-list\">\r\n        <div className=\"contact-tel\"></div>\r\n        <div className=\"contact-mail\"></div>\r\n        <div className=\"contact-address\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst thoughtsList = [\r\n  { text: \"keep myself as an independent one\" },\r\n  { text: \"coding is an implement of art \" },\r\n  { text: \"Good habits serve everyone\" }\r\n];\r\n\r\nexport const Thoughts = () => {\r\n  return (\r\n    <div>\r\n      {thoughtsList.map((item, index) => (\r\n        <div style={{padding: \"1rem 2rem\"}} key={index}>\r\n          {index + 1}. {item.text}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const WorkWrapper = styled.div`\r\n.work-list-item {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.work-list-image, .work-list-text {\r\n  padding: 4rem 0 0 2rem;\r\n  box-sizing: border-box;\r\n  width: 32rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n}\r\n\r\n.work-list-text {\r\n  top: 0;\r\n  margin: 4rem 0 0 2rem;\r\n  opacity: 0;\r\n  height: 100%;\r\n  position: absolute;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.work-list-text:hover, .work-list-image:hover~.work-list-text {\r\n  opacity: 1;\r\n  background-color: rgba(17, 17, 17, 0.6);\r\n}`\r\n\r\nexport const AboutWrapper = styled.div`\r\n  font-size: 1.5rem;\r\n  color: rgb(78, 78, 78, 0.6);\r\n  padding: 2rem;\r\n\r\n  &:hover {\r\n    color: rgb(178, 178, 178, 0.6);\r\n\r\n    &>a {\r\n      color: white;\r\n    }\r\n  }\r\n`","import React from \"react\";\r\nimport { WorkWrapper } from \"./style\";\r\nconst postInfos = [\r\n  {\r\n    title: \"coon\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2017/01/15/19/04/red-panda-1982445__340.jpg\",\r\n    text: \"the coon:\\n\\nOne of the coons just ran out of your mind\"\r\n  },\r\n  {\r\n    title: \"the woods\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2018/08/21/23/29/fog-3622519__340.jpg\",\r\n    text: \"the woods:\\n\\nQuite miss about it's peaceful sound\"\r\n  },\r\n  {\r\n    title: \"the fall\",\r\n    imageUrl:\r\n      \"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072823__340.jpg\",\r\n    text: \"the fall:\\n\\nEverything falls in the end, right?\"\r\n  }\r\n];\r\n\r\nexport const Works = () => {\r\n  return (\r\n    <WorkWrapper>\r\n      {postInfos.map((item, index) => (\r\n        <div className=\"work-list-item\" key={index}>\r\n          <img\r\n            src={item.imageUrl}\r\n            className=\"work-list-image\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"work-list-text\">{item.text}</div>\r\n        </div>\r\n      ))}\r\n    </WorkWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const HomeWrapper = styled.div`\r\n  position: relative;\r\n  color: white;\r\n  min-height: 120vh;\r\n  \r\n  .title {\r\n    padding: 10rem 2rem 4rem;\r\n\r\n    &>h1 {\r\n      font-weight: 600;\r\n      line-height: 1.25;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.1rem;\r\n      font-size: 1.375rem;\r\n    }\r\n\r\n    &>p {\r\n      line-height: 2;\r\n      padding-top: 0.5rem;\r\n      font-size: 0.85rem;\r\n    }\r\n  }\r\n  .main-view{\r\n    min-height:calc(100vh - 400px);\r\n  }\r\n  .header {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    height: 4rem;\r\n    line-height: 4rem;\r\n    padding: 0 2rem;\r\n    text-transform: uppercase;\r\n    box-sizing: border-box;\r\n    color: rgb(102, 102, 102);\r\n\r\n    .header-left {\r\n      letter-spacing: 0.2rem;\r\n\r\n      &:hover {\r\n        color: white;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      display: flex;\r\n      flex-flow: row;\r\n      position: relative;\r\n      justify-content: center;\r\n\r\n      .header-links>* {\r\n        margin-left: 1rem;\r\n        letter-spacing: 0.1rem;\r\n      }\r\n\r\n      .header-links>*:hover {\r\n        color: white;\r\n      }\r\n\r\n      .header-ham-button {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 0;\r\n        transform: translateY(-50%);\r\n        display: block;\r\n        width: 1.5625rem;\r\n        height: 1.5625rem;\r\n        border: 0.08rem solid rgb(102, 102, 102);\r\n        border-radius: 0.175rem;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n\r\n        &:after {\r\n          content: '';\r\n          position: absolute;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 60%;\r\n          height: 100%;\r\n          background: repeating-linear-gradient(\r\n            transparent 0,\r\n            transparent 20%,\r\n            rgb(142, 142, 142) 22%,\r\n            rgb(142, 142, 142) 28%,\r\n            transparent 30%,\r\n            transparent 45%,\r\n            rgb(142, 142, 142) 47%,\r\n            rgb(142, 142, 142) 53%,\r\n            transparent 55%,\r\n            transparent 70%,\r\n            rgb(142, 142, 142) 72%,\r\n            rgb(142, 142, 142) 78%,\r\n            transparent 80%,\r\n            transparent 100%\r\n          );\r\n        }\r\n      }\r\n\r\n      @media screen and (max-width: 768px) {\r\n        .header-links {\r\n          display: flex;\r\n          position: absolute;\r\n          top: calc(2rem + 1.5625rem / 2);\r\n          right: 0%;\r\n          line-height: 3.15;\r\n          text-align: right;\r\n          flex-flow: column;\r\n          justify-content: flex-start;\r\n        }\r\n\r\n        .header-links {\r\n          opacity: 0;\r\n          visibility: hidden;\r\n        }\r\n\r\n        .header-ham-button {\r\n          opacity: 1;\r\n          visibility: visible;\r\n        }\r\n\r\n        .header-ham-button:hover ~ .header-links, .header-links:hover {\r\n          opacity: 1;\r\n          visibility: visible;\r\n          border-top: none;\r\n          border-right: none;\r\n          border-radius: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\";\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { About } from \"../subs/About\";\r\nimport { Thoughts } from \"../subs/Thoughts\";\r\nimport { Works } from \"../subs/Works\";\r\nimport { HomeWrapper } from \"./style\";\r\n\r\nexport const Home = () => {\r\n  const showMenu = () => {};\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      <HashRouter>\r\n        <div className=\"header\">\r\n          <div className=\"header-left\">CAPERAL</div>\r\n          <div className=\"header-right\">\r\n            <i\r\n              className=\"header-ham-button\"\r\n              onClick={showMenu}\r\n              aria-label=\"menu\"\r\n            ></i>\r\n            <div className=\"header-links\">\r\n              <Link to=\"/work\" className=\"header-link\">\r\n                WORK\r\n              </Link>\r\n              <Link to=\"/thoughts\" className=\"header-link\">\r\n                THOUGHTS\r\n              </Link>\r\n              <Link to=\"/about\" className=\"header-link\">\r\n                ABOUT\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"title\">\r\n          <h1>lean on the tree</h1>\r\n          <h1>Yeah, full of pillows</h1>\r\n          <p>Minds shall reset, then dream wild</p>\r\n        </div>\r\n\r\n        <div className=\"main-view\">\r\n          <Switch>\r\n            <Route path=\"/work\" exact={true} component={Works} />\r\n            <Route path=\"/thoughts\" exact={true} component={Thoughts} />\r\n            <Route path=\"/about\" exact={true} component={About} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </HomeWrapper>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const SiteRecord = () => {\r\n    return (\r\n        <SiteInfo>\r\n            <p>\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ✨\r\n                </span>\r\n                This site is under developing, see you soon&nbsp;\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ✨\r\n                </span>\r\n            </p>\r\n            <br />\r\n            <p>\r\n                Written by Caper with passion and&nbsp;\r\n                <span role=\"img\" aria-label=\"emoji\">\r\n                    ❤️\r\n                </span>\r\n            </p>\r\n            <Anchor href=\"http://www.beian.miit.gov.cn/\" aria-label=\"link and check for this site\">\r\n                IPC证: 浙ICP备19047176号\r\n            </Anchor>\r\n        </SiteInfo>\r\n    )\r\n}\r\n\r\nconst SiteInfo = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    padding: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    font-size: 14px;\r\n    color: white;\r\n    & > p:hover {\r\n        color: goldenrod;\r\n    }\r\n`\r\n\r\nconst Anchor = styled.a`\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    font-size: 12px;\r\n    &:hover {\r\n        color: goldenrod;\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport \"./common/css/animations.css\";\r\nimport \"./common/css/reset.css\";\r\nimport { Home } from \"./components/main/Home\";\r\nimport { SiteRecord } from \"./components/main/SiteRecord\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Home />\r\n      <SiteRecord />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}