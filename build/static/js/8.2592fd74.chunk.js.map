{"version":3,"sources":["pages/about/About.tsx","pages/graphs/components/Chart.tsx","pages/graphs/EstateGraph.tsx","pages/graphs/PriceGraph.tsx","pages/graphs/Graphs.tsx","pages/home/components/Divide.tsx","pages/home/components/Links.tsx","pages/home/style.ts","pages/home/Home.tsx"],"names":["About","AboutWrapper","className","href","styled","div","EChart","React","lazy","Chart","props","api","children","extractMethod","useState","records","setRecords","chartData","setChartData","useEffect","fetchData","ServerApi","getListData","then","res","data","map","item","record","interval","setInterval","clearInterval","length","chartDataGenerator","StyledCharts","Suspense","fallback","index","key","extractValue","axisDataList","Object","keys","name","xValue","yValue","forEach","value","timestamp","push","format","parseInt","match","extractValueDefault","EstateGraph","PriceGraph","Graphs","path","Divide","primaryLinks","route","staticUrl","description","secondaryLinks","deep","Links","history","useHistory","LinksWrapper","singleActiveStyle","color","animation","defaultExpanded","onChangeRoute","longRoute","concat","replace","console","log","HomeWrapper","Home","data-spotlight","role","aria-label","component"],"mappings":"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","file":"static/js/8.2592fd74.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const About = () => {\n    return (\n        <AboutWrapper>\n            <div className=\"content\">-- Details not available --</div>\n\n            <div className=\"contact-list\">\n                <div className=\"contact-title\">You may contact me with</div>\n                <br />\n\n                <a href=\"https://github.com/caperso\" className=\"contact-github \">\n                    <span className=\"iconfont icon-github\"></span> https://github.com/caperso\n                </a>\n                <a href=\"mail:273964183@qq.com\" className=\"contact-mail \">\n                    <span className=\"iconfont icon-mail\"></span> 273964183@qq.com\n                </a>\n                <a href=\"tencent://message/?uin=273964183\" className=\"contact-chat\">\n                    <span className=\"iconfont icon-chat\"></span> 273964183\n                </a>\n            </div>\n        </AboutWrapper>\n    );\n};\n\nexport const AboutWrapper = styled.div`\n    font-size: 1.5rem;\n    color: rgb(78, 78, 78, 0.6);\n    padding: 2rem;\n    .content:hover {\n        color: rgb(178, 178, 178, 0.6);\n    }\n    .contact-list {\n        padding: 2rem 0;\n        display: flex;\n        flex-flow: column;\n        color: rgb(178, 178, 178, 0.6);\n        a > span {\n            line-height: 3em;\n            font-weight: 700;\n            padding: 0 0.25em 0 0;\n        }\n        a:hover {\n            color: white;\n        }\n        [class*='contact-'] {\n            padding: 0.5rem 0;\n        }\n    }\n`;\n","import { format } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport ServerApi, { EstateDataDto, RecordData } from '../../../assets/js/service';\n\nconst EChart = React.lazy(() => {\n    return import(/* webpackChunkName: 'StockChart' */ './EChartGenerator');\n});\n\ninterface Props {\n    api: string; // where data from\n    extractMethod?: (value: string) => number;\n    children?: React.ReactNode;\n}\n\nexport const Chart = (props: Props) => {\n    const { api, children, extractMethod } = props;\n    const [records, setRecords] = useState<RecordData[]>([]);\n    const [chartData, setChartData] = useState<AxisData[]>([]);\n\n    useEffect(() => {\n        const fetchData = () =>\n            ServerApi.getListData<EstateDataDto[]>(api).then((res) => {\n                const records = res.data.map((item) => item.record);\n                setRecords(records);\n            });\n        fetchData();\n        const interval = setInterval(fetchData, 1000 * 60 * 60);\n        return () => clearInterval(interval);\n    }, [api]);\n\n    /*\n     * transform to axis data\n     */\n    useEffect(() => {\n        if (!records.length) {\n            return;\n        }\n        const data = chartDataGenerator(records, extractMethod);\n        if (data) {\n            setChartData(data);\n        }\n    }, [records, extractMethod]);\n\n    return (\n        <StyledCharts>\n            <React.Suspense fallback={<div>Loading...</div>}>\n                {children}\n                {chartData.map((item, index) => (\n                    <EChart data={item} key={index} />\n                ))}\n            </React.Suspense>\n        </StyledCharts>\n    );\n};\n\nconst StyledCharts = styled.div`\n    .chart-item {\n        padding: 30px;\n    }\n`;\n\n// Array format needs in the end\ninterface AxisData {\n    name: string;\n    xValue: string[];\n    yValue: number[];\n}\n\nconst chartDataGenerator = (records: RecordData[], extractValue?: (value: string) => number): AxisData[] => {\n    let axisDataList: AxisData[] = Object.keys(records[0]).map((item) => ({\n        name: item,\n        xValue: [],\n        yValue: [],\n    }));\n\n    // default: looking for first numbers in string,\n    // if method was in the props, use it\n    const extractValueDefault = (value: string) => {\n        return parseInt(value.match(/(\\d)+/g)![0], 10);\n    };\n\n    axisDataList.forEach((data) => {\n        records.forEach((item) => {\n            if (!Object.keys(item).length) {\n                return;\n            }\n            const { value, timestamp } = item[data.name]; // get specific data from resource name\n            data.xValue.push(format(parseInt(timestamp, 10), 'HH@dd/MM/yyyy'));\n            data.yValue.push(extractValue ? extractValue(value) : extractValueDefault(value));\n        });\n    });\n    return axisDataList;\n};\n","import React from 'react';\nimport { Chart } from './components/Chart';\n\nexport const EstateGraph = () => {\n    return <Chart api=\"list/estate\"></Chart>;\n};\n","import React from 'react';\nimport { Chart } from './components/Chart';\n\nexport const PriceGraph = () => {\n    const extractValue = (value: string)=>{\n        return parseInt(value.match(/(\\d+)/g)![0],10)\n    }\n    return <Chart api=\"list/price/youlinghu\" extractMethod={extractValue}></Chart>;\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { EstateGraph } from './EstateGraph';\nimport { PriceGraph } from './PriceGraph';\n\nexport const Graphs = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/home/graphs/estate\">\n                    <EstateGraph />\n                </Route>\n                <Route path=\"/home/graphs/price\">\n                    <PriceGraph />\n                </Route>\n                <Route path=\"/home/graphs/marketing\">Market data not available still digging</Route>\n            </Switch>\n        </div>\n    );\n};\n\n","import styled from 'styled-components';\n\nexport const Divide = styled.div`\n    width: 100%;\n    height: 2em;\n    line-height: 2em;\n`;\n","import { Levels } from 'gearware';\nimport 'gearware/lib/components/maintaining/levels/index.css';\nimport { Level } from 'gearware/lib/components/maintaining/levels/Levels';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { Divide } from './Divide';\n\nconst primaryLinks: Level[] = [\n    {\n        name: 'Gearware',\n        route: 'gears',\n        staticUrl: 'https://gears.caperal.cn',\n        description: 'React UI library',\n    },\n    { name: 'Kaleidoscope', route: 'kai', description: '一键生成Creo关系程序' },\n];\n\nconst secondaryLinks: Level[] = [\n    {\n        name: 'Charts',\n        route: 'graphs',\n        description: 'From my data collector',\n        deep: [\n            { name: 'Real Estate', route: 'estate', description: 'House Stock' },\n            { name: 'Price', route: 'price', description: 'Some Item Price' },\n        ],\n    },\n    {\n        name: 'Notes',\n        description: 'My notes',\n        deep: [\n            {\n                name: 'FE Technics',\n                staticUrl: 'https://caperso.github.io/handnote/',\n                description: 'My FE handnote',\n            },\n            {\n                name: 'Node & Service',\n                description: 'Preparing',\n            },\n            {\n                name: 'C++ & Algorithm',\n                description: 'Preparing',\n            },\n        ],\n    },\n    { route: 'about', name: 'About', description: 'Contact and more' },\n];\n\nexport const Links = () => {\n    const history = useHistory();\n\n    const handleRouteChange = (route: string) => {\n        const longRoute = '/home/'.concat(route);\n        history.replace(longRoute);\n        console.log(longRoute);\n    };\n\n    const activeStyle: React.CSSProperties = {\n        color: 'white',\n        animation: 'none',\n    };\n\n    return (\n        <LinksWrapper>\n            <Levels data={primaryLinks} />\n            <Divide />\n            <Levels data={secondaryLinks} singleActiveStyle={activeStyle} defaultExpanded={false} onChangeRoute={handleRouteChange} />\n        </LinksWrapper>\n    );\n};\n\nconst LinksWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 655px;\n    position: relative;\n\n    /* css hack */\n    .g-levels-wrapper {\n        div {\n            .g-levels-one {\n                padding: 0.5rem 0;\n                color: #444;\n                animation: none;\n\n                &:hover {\n                    color: white;\n                }\n\n                &:hover::after {\n                    color: #eee;\n                    font-weight: 300;\n                    font-size: 26px;\n                }\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n    position: relative;\n    color: white;\n    min-height: 120vh;\n    z-index: 1;\n\n    .title {\n        padding: 10rem 2rem 4rem;\n        @media screen and (max-height: 920px) {\n            padding: 4rem 2rem 4rem;\n        }\n\n        .spot-light {\n            position: relative;\n            font-size: 50px;\n            font-weight: 600;\n            line-height: 1.25;\n            color: #444;\n            text-transform: uppercase;\n            letter-spacing: 0.5rem;\n            &::after {\n                content: attr(data-spotlight);\n                position: absolute;\n                left: 0;\n                top: 0;\n                color: transparent;\n                -webkit-background-clip: text;\n                background-clip: text;\n                background-image: linear-gradient(to right, #12c2e9, #c471ed, #f64f59);\n                clip-path: ellipse(50px 50px at -20% 50%);\n                animation: spotlight 3s infinite ease-in-out;\n            }\n        }\n\n        & > h1,\n        h2 {\n        }\n\n        & > h2 {\n            font-weight: 600;\n            line-height: 1.25;\n            font-size: 30px;\n        }\n\n        & > p {\n            padding-top: 0.5rem;\n            font-size: 15px;\n            line-height: 15px;\n            margin-top: 10px;\n        }\n    }\n    .main-view {\n        padding: 0 2rem;\n        min-height: calc(100vh - 400px);\n    }\n`;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { About } from '../about/About';\nimport { Graphs } from '../graphs/Graphs';\nimport { Links } from './components/Links';\nimport { HomeWrapper } from './style';\n\nconst Home = () => {\n    return (\n        <HomeWrapper>\n            <div className=\"title\">\n                <h1 className=\"spot-light\" data-spotlight=\"Caperal\">\n                    Caperal\n                </h1>\n                <br />\n                <h2>Caper's spacetown for </h2>\n                <h2>Data Charts, Notes, React Library, Docs</h2>\n                <p>\n                    For now, I'm developing &emsp;\n                    <span role=\"img\" aria-label=\"gear\">\n                        ⚙️ Gearware ⚙️\n                    </span>\n                </p>\n            </div>\n\n            <Links />\n\n            <div className=\"main-view\">\n                <Switch>\n                    <Route path=\"/home/graphs\" component={Graphs} />\n                    <Route path=\"/home/about\" component={About} />\n                </Switch>\n            </div>\n        </HomeWrapper>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}